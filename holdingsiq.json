{
  "openapi": "3.0.1",
  "info": {
    "title": "EBSCO HoldingsIQ",
    "description": "The EBSCO HoldingsIQ service retrieves vendor, package and title related information in JSON format.  The information includes customer selected resources as reflected in the EBSCO Knowledge Base for both EBSCO managed and customer managed resources.",
    "termsOfService": "",
    "license": {
      "name": "Copyright EBSCO",
      "url": "https://www.ebsco.com/terms-of-use"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://sandbox.ebsco.io/rm/rmaccounts"
    },
    {
      "url": "https://api.ebsco.io/rm/rmaccounts"
    }
  ],
  "tags": [
    {
      "name": "Vendor Resources"
    },
    {
      "name": "Package Resources"
    },
    {
      "name": "Title Resources"
    },
    {
      "name": "Holdings Resources"
    },
    {
      "name": "Label and Proxy Resources"
    },
    {
      "name": "Subject Resource"
    },
	{
	  "name": "Category Resources"
	}
  ],
  "paths": {
    "/{custid}/": {
      "get": {
        "tags": [
          "Label and Proxy Resources"
        ],
        "summary": "Get Labels and Root Proxy",
        "description": "This operation allows you to retrieve the list of all custom field labels and the root proxy.\n\n  **Please Note:**  The last forward slash in the url for this resource is only needed when using the sandbox.  Do not use the last forward slash in the url for the live api.  You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all custom labels and the root proxy.  Up to 5 labels can be retrieved in the response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customLabelsProxy"
                }
              }
            }
          },
          "403": {
            "description": "User is not authorized to access this resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/403error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Label and Proxy Resources"
        ],
        "summary": "Create and Label Custom Fields",
        "description": "This operation allows you to create and label up to five custom fields for your Title Details. Specify the field label ID, Display Label Name and indicate whether youâ€™d like the information to display on Publication Finder and/or Full Text Finder. Once the Custom Label field(s) have been created, one can verify it in  Title Details REST end point. Not specifying the Custom labels details  for a given custom label ID in the payload will result in setting displayLabel to empty string.  If you do not provide a JSON payload, the JSON payload will be set to the default values and customizations made previously will be lost.  If you wish to keep your current customizations, please be sure to set the JSON payload accordingly.  \n\n  **Please Note:** The last forward slash in the url for this resource is only needed when using the sandbox.  Do not use the last forward slash in the url for the live api.  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require a sandbox API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update custom labels and proxy.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customLabels"
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the PUT request.",
            "content": {}
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/proxies": {
      "get": {
        "tags": [
          "Label and Proxy Resources"
        ],
        "summary": "Get Customer Proxies",
        "description": "This operation allows you to retrieve the list of all available customer proxies.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of all available proxies.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/proxyList"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/404error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/vendors": {
      "get": {
        "tags": [
          "Vendor Resources"
        ],
        "summary": "Get Vendors",
        "description": "This operation allows you to search EPKB by vendor.  It returns a list of vendors that includes customer context and the total number of results.  When searching for vendors without a search parameter, sort options will be by vendor name.  When the search parameter is not null, the default sort is by relevance.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term - When searching for vendors without a search parameter, sort options will be by vendorname.  When the search parameter is not null, the default sort is by relevance.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are relevance and vendorname.  Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "vendorname"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                10,
                20,
                30
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "show",
            "in": "query",
            "description": "Valid values are All, Selected and Unselected.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of vendors matching the vendor name and the total number vendors found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vendors"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/vendors/{vendorid}": {
      "get": {
        "tags": [
          "Vendor Resources"
        ],
        "summary": "Get Vendor Details",
        "description": "This operation allows you to retrieve vendor details from EPKB for a specific vendor ID.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require a sandbox API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Vendor details from EPKB for a specific vendor ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/vendorDetails"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor Resources"
        ],
        "summary": "Update Vendor Proxy and Token Values",
        "description": "This operation allows you to update vendor proxy and token values for a specific vendor ID.  If a vendor does not have a token set up, the JSON payload should have an empty token with a proxy value.  A vendor with **inherited** set to true inherits its proxy from the root proxy.  So, a JSON payload with **inherited** set to true updates the vendor proxy with the root proxy if the root proxy is set.  If you do not provide a JSON payload, the JSON payload will be set to the default values and customizations made previously will be lost.  If you wish to keep your current customizations, please be sure to set the JSON payload accordingly.  \n\n  **Please Note:** You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update a vendor.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/updateVendorPayload"
              },
              "examples": {
                "bodyoptiona": {
                  "summary": "JSON payload to update a vendor with a proxy",
                  "value": {
                    "proxy": {
                      "id": "EZ_proxy"
                    },
                    "vendorToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionb": {
                  "summary": "JSON payload to update a vendor with an inherited proxy",
                  "value": {
                    "proxy": {
                      "id": "",
                      "inherited": true
                    }
                  }
                },
                "bodyoptionc": {
                  "summary": "JSON payload to update a vendor with a non-inherited proxy",
                  "value": {
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    },
                    "vendorToken": {
                      "value": "myValue"
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the PUT request.",
            "content": {}
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/vendors/{vendorid}/packages": {
      "get": {
        "tags": [
          "Vendor Resources"
        ],
        "summary": "Get List of Packages for a Vendor",
        "description": "This operation allows you to retrieve a list of packages from EPKB for a vendor including customer context.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/vendors/{vendorid}/lists",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Keyword search applied to limit the package list results.  The search term is contained in the package name.  When searching for packages without a search parameter, the sort options will be by packagename.  When the search parameter is not null, then the default sort is by relevance.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search to be performed.  Valid values are exactphrase and advanced.  It is also valid to use 1 for exactphrase or 2 for advanced.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "exactphrase",
                "advanced"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the result set.  Valid values are all, selected, notselected and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for notselected, or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Limit by type of package content.  Both integer and string are supported.  Valid values are all, aggregatedfulltext, abstractandindex, ebook, ejournal, print, unknown, onlinereference, streamingmedia or mixedcontent.  It is also valid to use 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "aggregatedfulltext",
                "abstractandindex",
                "ebook",
                "ejournal",
                "print",
                "unknown",
                "onlinereference",
                "streamingmedia",
                "mixedcontent"
              ]
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are relevance or packagename.  Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "packagename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API.  You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages from EPKB for a specific vendor ID and the total number of results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/packages"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Create Custom Packages",
        "description": "This operation allows you to create custom packages.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON POST payload.  Specify the packageName in the payload.  Set contentType in the payload to 1 for Agregated Full Text, 2 for Abstract and Index, 3 for Ebook, 4 for E-Journal, 5 for Print, 6 for Unknown, 7 for Online Reference, 8 for Streaming Media or 9 for Mixed Content.  Set the custom coverage dates.  Set the proxy ID.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customPackagePayload"
              },
              "examples": {
                "bodyoptiona": {
                  "summary": "JSON payload to create a custom package (required fields only)",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3
                  }
                },
                "bodyoptionb": {
                  "summary": "JSON payload to create a custom package with custom coverage",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3,
                    "customCoverage": {
                      "beginCoverage": "2024-01-01",
                      "endCoverage": "2024-12-31"
                    }
                  }
                },
                "bodyoptionc": {
                  "summary": "JSON payload to create a custom package with custom description, custom display name, and url",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3,
                    "customDescription": "Custom Package Description",
                    "customDisplayName": "Custom Display Name",
                    "url": "www.yourlibrary.com/medical"
                  }
                },
                "bodyoptiond": {
                  "summary": "JSON payload to create a custom package with alternate package neames",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3,
                    "customAltNames": [
                      {
                        "altName": "Custom Alt Name 1",
                        "id": null
                      }
                    ]
                  }
                },
                "bodyoptione": {
                  "summary": "JSON payload to create a custom package with package free access",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3,
                    "packageFreeAccess": true
                  }
                },
                "bodyoptionf": {
                  "summary": "JSON payload to create a custom package with all fields",
                  "value": {
                    "packageName": "New Custom Package",
                    "contentType": 3,
                    "customCoverage": {
                      "beginCoverage": "2024-01-01",
                      "endCoverage": "2024-12-31"
                    },
                    "proxy": {
                      "id": null,
                      "inherited": true
                    },
                    "customDescription": "Custom Package Description",
                    "customDisplayName": "Custom Display Name",
                    "url": "www.yourlibrary.com/medical",
                    "customAltNames": [
                      {
                        "altName": "Custom Alt Name 1",
                        "id": null
                      }
                    ],
                    "subjects": [
                      35408
                    ],
                    "packageFreeAccess": true
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Package ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customPackageResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/packages": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get List of Packages",
        "description": "This operation allows you to search for packages and returns a list of packages from EPKB.  The list is not limited to a single vendor ID.  The response will reflect the context of the EBSCO customer ID included in the request.  When searching for packages without a search parameter, the sort options will be by package name.  When the search parameter is not null, then the default sort is by relevance.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/lists/",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Keyword search that is applied to limit the results to packages from the vendor that have the search term in the package name.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search to be performed.  Valid values are exactphrase and advanced.  It is also valid to use 1 for exactphrase or 2 for advanced.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "exactphrase",
                "advanced"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Valid values are all, selected, notselected, and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for not selected or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Limits the results by type of package content.  Both integer and string are supported.  Valid values are all, aggregatedfulltext, abstractandindex, ebook, ejournal, print, unknown, onlinereference, streamingmedia or mixedcontent.  It is also valid to use 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "aggregatedfulltext",
                "abstractandindex",
                "ebook",
                "ejournal",
                "print",
                "unknown",
                "onlinereference",
                "streamingmedia",
                "mixedcontent"
              ]
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are packagename and relevance. Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "packagename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages and the total packages found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/packages"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{custid}/vendors/{vendorid}/packages/{packageid}": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Package Details",
        "description": "This operation allows you to retrieve information for a specific package.  It returns details in the context of a customer.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/lists/{listid}",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Package details for a specific package ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/packageIdDetails"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Update a Package",
        "description": "This operation allows you to update selection and customizations to a package in a customer account.  A package with inherited set to true inherits its proxy from the root proxy. So, a JSON payload with inherited set to true updates the package proxy with the root proxy if the root proxy is set.  The isSelected payload element is mandatory for managed and custom packages. isSelected, packageName and contentType payload elements are mandatory for the custom package update payload. For both managed and custom packages, removing a package with isSelected set to false in the payload will result in a loss of customization made previously at the package level. Removing a custom package with isSelected set to false in the payload will result in the deletion (hard delete) of the custom package and all associated titles from this custom package.  If the payload contains ONLY isSelected set to true with no other customization fields, the system will remove all previously set customization.  If you do not provide a JSON payload, the JSON payload will be set to the default values and customizations made previously will be lost.  If you wish to keep your current customizations, please be sure to set the JSON payload accordingly.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/lists/{listid}",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update selection and customizations to a package.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/setPackagePayload"
              },
              "examples": {
                "bodyoptiona": {
                  "summary": "JSON payload to select the entire package",
                  "value": {
                    "isSelected": true
                  }
                },
                "bodyoptionb": {
                  "summary": "JSON payload to set custom coverage including hiding titles",
                  "value": {
                    "isSelected": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "isHidden": true
                  }
                },
                "bodyoptionc": {
                  "summary": "JSON payload to hide a package",
                  "value": {
                    "isSelected": true,
                    "isHidden": true
                  }
                },
                "bodyoptiond": {
                  "summary": "JSON payload to set custom coverage excluding hiding titles",
                  "value": {
                    "isSelected": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "isHidden": false
                  }
                },
                "bodyoptione": {
                  "summary": "JSON payload to unselect the entire package",
                  "value": {
                    "isSelected": false
                  }
                },
                "bodyoptionf": {
                  "summary": "JSON payload to set custom coverage to a partially selected package",
                  "value": {
                    "isSelected": true,
                    "isFullPackage": false,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    }
                  }
                },
                "bodyoptiong": {
                  "summary": "JSON payload to set values in a managed package",
                  "description": "JSON payload to set values in a managed package.  isSelected is required for a managed package.",
                  "value": {
                    "isSelected": true,
                    "isHidden": false,
                    "allowEbscoToAddTitles": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionh": {
                  "summary": "JSON payload to set values in a custom package",
                  "description": "JSON payload to set values in a custom package. isSelected, contentType, and packageName are required for a custom package.",
                  "value": {
                    "packageName": "Library Package 1",
                    "contentType": 3,
                    "isSelected": true,
                    "isHidden": false,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    }
                  }
                },
                "bodyoptioni": {
                  "summary": "JSON payload to update a package with a proxy",
                  "value": {
                    "isSelected": true,
                    "proxy": {
                      "id": "EZ_proxy"
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionj": {
                  "summary": "JSON payload to update a package with an inherited proxy",
                  "value": {
                    "isSelected": true,
                    "proxy": {
                      "id": "",
                      "inherited": true
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionk": {
                  "summary": "JSON payload to update a package custom description",
                  "value": {
                    "isSelected": true,
                    "customDescription": "myPackageCustomDescription"
                  }
                },
                "bodyoptionl": {
                  "summary": "JSON payload to update a custom package url",
                  "value": {
                    "isSelected": true,
                    "url": "myUrl"
                  }
                },
                "bodyoptionm": {
                  "value": {
                    "isSelected": true,
                    "customAltNames": [
                      {
                        "id": "1",
                        "altName": "Managed Alternate Name"
                      }
                    ],
                    "customDisplayName": "string"
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the PUT request.",
            "content": {}
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v2/{custid}/lists/{listid}": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Package Details",
        "description": "This operation allows you to retrieve information for a specific package.  It returns details in the context of a customer.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listid",
            "in": "path",
            "description": "List ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Package details for a specific package ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/packageIdDetailsV1"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Update a Package",
        "description": "This operation allows you to update selection and customizations to a package in a customer account.  A package with inherited set to true inherits its proxy from the root proxy. So, a JSON payload with inherited set to true updates the package proxy with the root proxy if the root proxy is set.  The isSelected payload element is mandatory for managed and custom packages. isSelected, packageName and contentType payload elements are mandatory for the custom package update payload. For both managed and custom packages, removing a package with isSelected set to false in the payload will result in a loss of customization made previously at the package level. Removing a custom package with isSelected set to false in the payload will result in the deletion (hard delete) of the custom package and all associated titles from this custom package.  If the payload contains ONLY isSelected set to true with no other customization fields, the system will remove all previously set customization.  If you do not provide a JSON payload, the JSON payload will be set to the default values and customizations made previously will be lost.  If you wish to keep your current customizations, please be sure to set the JSON payload accordingly.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listid",
            "in": "path",
            "description": "List ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update selection and customizations to a package.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/setPackagePayloadV1"
              },
              "examples": {
                "bodyoptiona": {
                  "summary": "JSON payload to select the entire package",
                  "value": {
                    "isSelected": true
                  }
                },
                "bodyoptionb": {
                  "summary": "JSON payload to set custom coverage including hiding titles",
                  "value": {
                    "isSelected": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "isHidden": true
                  }
                },
                "bodyoptionc": {
                  "summary": "JSON payload to hide a package",
                  "value": {
                    "isSelected": true,
                    "isHidden": true
                  }
                },
                "bodyoptiond": {
                  "summary": "JSON payload to set custom coverage excluding hiding titles",
                  "value": {
                    "isSelected": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "isHidden": false
                  }
                },
                "bodyoptione": {
                  "summary": "JSON payload to unselect the entire package",
                  "value": {
                    "isSelected": false
                  }
                },
                "bodyoptionf": {
                  "summary": "JSON payload to set custom coverage to a partially selected package",
                  "value": {
                    "isSelected": true,
                    "isFullPackage": false,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    }
                  }
                },
                "bodyoptiong": {
                  "summary": "JSON payload to set values in a managed package",
                  "description": "JSON payload to set values in a managed package.  isSelected is required for a managed package.",
                  "value": {
                    "isSelected": true,
                    "isHidden": false,
                    "allowEbscoToAddTitles": true,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionh": {
                  "summary": "JSON payload to set values in a custom package",
                  "description": "JSON payload to set values in a custom package. isSelected, contentType, and packageName are required for a custom package.",
                  "value": {
                    "packageName": "Library Package 1",
                    "contentType": 3,
                    "isSelected": true,
                    "isHidden": false,
                    "customCoverage": {
                      "beginCoverage": "2003-01-01",
                      "endCoverage": "2003-12-12"
                    },
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    }
                  }
                },
                "bodyoptioni": {
                  "summary": "JSON payload to update a package with a proxy",
                  "value": {
                    "isSelected": true,
                    "proxy": {
                      "id": "EZ_proxy"
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionj": {
                  "summary": "JSON payload to update a package with an inherited proxy",
                  "value": {
                    "isSelected": true,
                    "proxy": {
                      "id": "",
                      "inherited": true
                    },
                    "packageToken": {
                      "value": "myValue"
                    }
                  }
                },
                "bodyoptionk": {
                  "summary": "JSON payload to update a package custom description",
                  "value": {
                    "isSelected": true,
                    "customDescription": "myPackageCustomDescription"
                  }
                },
                "bodyoptionl": {
                  "summary": "JSON payload to update a custom package url",
                  "value": {
                    "isSelected": true,
                    "url": "myUrl"
                  }
                },
                "bodyoptionm": {
                  "summary": "JSON payload to update a custom alt name and display name",
                  "value": {
                    "isSelected": true,
                    "customAltNames": [
                      {
                        "id": "1",
                        "altName": "Managed Alternate Name"
                      }
                    ],
                    "customDisplayName": "string"
                  }
                },
                "bodyoptionn": {
                  "summary": "JSON payload to update a package with a subject association",
                  "value": {
                    "isSelected": true,
                    "subjectAssociations": [
                      {
                        "subjectId": 35408
                      }
                    ]
                  }
                },
                "bodyoptiono": {
                  "summary": "JSON payload to update package free access for a custom package",
                  "value": {
                    "isSelected": true,
                    "packageFreeAccess": true
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the PUT request.",
            "content": {}
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/vendors/{vendorid}/packages/{packageid}/titles": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Titles that are Part of a Package",
        "description": "This operation allows you to search and retrieve a list of titles from EPKB that are part of a specified package.  The response will reflect the context of the EBSCO customer ID included in the request.  When searching for titles without a search parameter, the sort options will be by title name.  When the search parameter is not null, the default sort is by relevance.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Keyword search that is applied to limit the results to titles from the package that have the search term in the search field.  When searching for titles without a search parameter, the sort options will be by titlename. When the search parameter is not null, then the default sort is by relevance.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "description": "Field to search.  Both integer and string are supported.  Valid values are titlename, publisher, isxn, and subject.  It is also valid to use 0 for title name, 1 for publisher, 2 for isxn or 3 for subject.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "titlename",
                "publisher",
                "isxn",
                "subject"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Valid values are all, selected, notselected and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for notselected, or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "resourcetype",
            "in": "query",
            "description": "Type of resource. Valid values are all, journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.  It is also valid to use 0 for all, 1 for journal, 2 for newsletter, 3 for report, 4 for proceedings, 5 for website, 6 for newspaper, 7 for unspecified, 8 for book, 9 for book series, 10 for database, 11 for thesis dissertation, 12 for streaming audio, 13 for streaming video, or 14 for audio book.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "journal",
                "newsletter",
                "report",
                "proceedings",
                "website",
                "newspaper",
                "unspecified",
                "book",
                "bookseries",
                "database",
                "thesisdissertation",
                "streamingaudio",
                "streamingvideo",
                "audiobook"
              ]
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are relevance and titlename.  Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "titlename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Types of subjects to be returned. By default returns tli and bisac. Valid values are: bisac, tli, libraryofcongress and medical.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Titles from EPKB for a specific package ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titlesPackageId"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Create Custom Titles",
        "description": "This operation allows you to create custom titles.  The titleName and pubType elements are required in the custom title payload.  If your JSON POST payload contains multiple coverage dates, the dates must be in descending order.   \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON POST title details payload.  The titleName and pubType elements are required in the custom title payload.  If your JSON POST payload contains multiple coverage dates, the dates must be in descending order.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customTitlePayload"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "Title ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/customTitleResponse"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/vendors/{vendorid}/packages/{packageid}/titles/{kbid}": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Package-Title Details",
        "description": "This operation allows you to retrieve details for a particular package-title from EPKB.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/lists/{listid}/titles/{kbid}",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Types of subjects to be returned. By default returns tli and bisac. Valid values are: bisac, tli, libraryofcongress and medical.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Title Response \n\n Package-title from EPKB regardless of the package that it is a part of.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titleDetails"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "put": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Update a Title in a Package",
        "description": "This operation allows you to update selection status, proxy value or coverage customizations for a title within a package in a customer EPKB account.  A title with **inherited** set to true inherits its proxy from the root proxy.  So, a JSON payload with **inherited** set to true updates the title proxy with the root proxy if the root proxy is set.  The isSelected payload element is mandatory for managed and custom titles.  The titleName and pubType payload elements are mandatory for the custom title update payload.  For both managed and custom titles, removing a title with isSelected set to false in the payload will result in a loss of customization made previously at the title level.  Removing a custom title with isSelected set to false in the payload will result in the deletion (hard delete) of the custom title from the custom package.  If the payload contains ONLY isSelected set to true with no other customization fields, the system will remove all previously set customization.  If you do not provide a JSON payload, the JSON payload will be set to the default values and customizations made previously will be lost.  If you wish to keep your current customizations, please be sure to set the JSON payload accordingly.  \n\n  **Please Note:**   You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/lists/{listid}/titles/{kbid}",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API.  You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON payload to update a title within a package.  The isSelected, titleName and pubType payload elements are mandatory for the custom title payload.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/setTitleinPackagePayload"
              },
              "examples": {
                "bodyoptiona": {
                  "summary": "JSON payload to select a package-title",
                  "description": "JSON payload to select a package-title. The isSelected payload element is mandatory for managed and custom titles.  The titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book"
                  }
                },
                "bodyoptionb": {
                  "summary": "JSON payload to hide a package-title",
                  "description": "JSON payload to hide a package-title. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "isHidden": true,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book"
                  }
                },
                "bodyoptionc": {
                  "summary": "JSON payload to set custom coverage, coverage statement and custom embargo",
                  "description": "JSON payload to set custom coverage, coverage statement and custom embargo. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload. When adding multiple custom coverage date ranges, the most recent date range must be first followed by date ranges in descending order. If another custom coverage date range is added that is greater than the previously entered date range, the system will show the error message - CoverageList contains a date that exceeds a previous date value.",
                  "value": {
                    "isSelected": true,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "coverageStatement": "2009 - 2009",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    }
                  }
                },
                "bodyoptiond": {
                  "summary": "JSON payload to un-select a package-title",
                  "description": "JSON payload to un-select a package-title. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": false,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book"
                  }
                },
                "bodyoptione": {
                  "summary": "JSON payload to un-hide a package-title",
                  "description": "JSON payload to un-hide a package-title. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "isHidden": false,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book"
                  }
                },
                "bodyoptionf": {
                  "summary": "JSON payload to set user defined fields",
                  "description": "JSON payload to set user defined fields. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book",
                    "userDefinedField1": "string1",
                    "userDefinedField2": "string2",
                    "userDefinedField3": "string3",
                    "userDefinedField4": "string4",
                    "userDefinedField5": "string5"
                  }
                },
                "bodyoptiong": {
                  "summary": "JSON combined payload",
                  "description": "JSON combined payload. The isSelected payload element is mandatory for managed and custom titles. The titleName and pubType payload elements are mandatory for the custom title payload. When adding multiple custom coverage date ranges, the most recent date range must be first followed by date ranges in descending order. If another custom coverage date range is added that is greater than the previously entered date range, the system will show the error message - CoverageList contains a date that exceeds a previous date value.",
                  "value": {
                    "isSelected": true,
                    "titleName": "A Tale of Two Cities",
                    "pubType": "Book",
                    "isHidden": false,
                    "userDefinedField1": "string1",
                    "userDefinedField2": "string2",
                    "userDefinedField3": "string3",
                    "userDefinedField4": "string4",
                    "userDefinedField5": "string5",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "coverageStatement": "2009 - 2009",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    }
                  }
                },
                "bodyoptionh": {
                  "summary": "JSON payload to update the details of a custom title",
                  "description": "JSON payload to update the details of a custom title. The isSelected, titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "custom-title-74",
                    "pubType": "Book",
                    "publisherName": "EBSCO Publishing",
                    "isPeerReviewed": false,
                    "edition": "1",
                    "description": "description-test",
                    "url": "http://www.ebsco.com",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "isHidden": false,
                    "coverageStatement": "Issues on or after 6/1/1992",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    },
                    "userDefinedField1": "String1",
                    "userDefinedField2": "String2",
                    "userDefinedField3": "String3",
                    "userDefinedField4": "String4",
                    "userDefinedField5": "String5"
                  }
                },
                "bodyoptioni": {
                  "summary": "JSON payload to update the proxy value for a custom title",
                  "description": "JSON payload to update the proxy value for a custom title. The isSelected, titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "custom-title-74",
                    "pubType": "Book",
                    "publisherName": "EBSCO Publishing",
                    "isPeerReviewed": false,
                    "edition": "1",
                    "description": "description-test",
                    "url": "http://www.ebsco.com",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "isHidden": false,
                    "coverageStatement": "Issues on or after 6/1/1992",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    },
                    "userDefinedField1": "String1",
                    "userDefinedField2": "String2",
                    "userDefinedField3": "String3",
                    "userDefinedField4": "String4",
                    "userDefinedField5": "String5",
                    "proxy": {
                      "id": "EZ_proxy"
                    }
                  }
                },
                "bodyoptionj": {
                  "summary": "JSON payload to update the proxy value for a custom title {option 2}",
                  "description": "JSON payload to update the proxy value for a custom title. The isSelected, titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "custom-title-74",
                    "pubType": "Book",
                    "publisherName": "EBSCO Publishing",
                    "isPeerReviewed": false,
                    "edition": "1",
                    "description": "description-test",
                    "url": "http://www.ebsco.com",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "isHidden": false,
                    "coverageStatement": "Issues on or after 6/1/1992",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    },
                    "userDefinedField1": "String1",
                    "userDefinedField2": "String2",
                    "userDefinedField3": "String3",
                    "userDefinedField4": "String4",
                    "userDefinedField5": "String5",
                    "proxy": {
                      "id": "EZ_proxy",
                      "inherited": false
                    }
                  }
                },
                "bodyoptionk": {
                  "summary": "JSON payload to update the inherited proxy value for a custom title",
                  "description": "JSON payload to update the inherited proxy value for a custom title. The isSelected, titleName and pubType payload elements are mandatory for the custom title payload.",
                  "value": {
                    "isSelected": true,
                    "titleName": "custom-title-74",
                    "pubType": "Book",
                    "publisherName": "EBSCO Publishing",
                    "isPeerReviewed": false,
                    "edition": "1",
                    "description": "description-test",
                    "url": "http://www.ebsco.com",
                    "customCoverageList": [
                      {
                        "beginCoverage": "2003-01-01",
                        "endCoverage": "2003-12-12"
                      }
                    ],
                    "isHidden": false,
                    "coverageStatement": "Issues on or after 6/1/1992",
                    "customEmbargoPeriod": {
                      "embargoUnit": "Days",
                      "embargoValue": 1
                    },
                    "userDefinedField1": "String1",
                    "userDefinedField2": "String2",
                    "userDefinedField3": "String3",
                    "userDefinedField4": "String4",
                    "userDefinedField5": "String5",
                    "proxy": {
                      "id": "",
                      "inherited": true
                    }
                  }
                }
              }
            }
          },
          "required": false
        },
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the PUT request.",
            "content": {}
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{custid}/titles": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get List of Titles Regardless of Package",
        "description": "This operation allows you to search and retrieve a list of titles from EPKB regardless of the package(s) that the titles are a part of.  The response will reflect the context of the EBSCO customer ID included in the request.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.  This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/titles",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term.  Keyword search that is applied to limit the results to titles that have the search term in the search field.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "description": "Field to search.  Both integer and string are supported.  Valid values are titlename, publisher, isxn, subject and zdbid.  It is also valid to use 0 for title name, 1 for publisher, 2 for isxn, 3 for subject or 4 for zdbid.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "titlename",
                "publisher",
                "isxn",
                "subject",
                "zdbid"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Valid values are all, selected, notselected and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for notselected, or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "resourcetype",
            "in": "query",
            "description": "Type of resource. Valid values are all, journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.  It is also valid to use 0 for all, 1 for journal, 2 for newsletter, 3 for report, 4 for proceedings, 5 for website, 6 for newspaper, 7 for unspecified, 8 for book, 9 for book series, 10 for database, 11 for thesis dissertation, 12 for streaming audio, 13 for streaming video, or 14 for audio book.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "journal",
                "newsletter",
                "report",
                "proceedings",
                "website",
                "newspaper",
                "unspecified",
                "book",
                "bookseries",
                "database",
                "thesisdissertation",
                "streamingaudio",
                "streamingvideo",
                "audiobook"
              ]
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search. Search types are any, contains, exactmatch, beginswith, proximity, exactphrase and advanced. It is also valid to use 0 for any, 1 for contains, 2 for exactmatch, 3 for beginswith, 4 for proximity, 5 for exactphrase or 6 for advanced.  searchtype is an optional parameter and defaults to contains if not provided.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "schema": {
              "type": "string",
              "enum": [
                "any",
                "contains",
                "exactmatch",
                "beginswith",
                "proximity",
                "exactphrase",
                "advanced"
              ]
            }
          },
          {
            "name": "packageidfilter",
            "in": "query",
            "description": "A comma-separated list of package ID(s). Limits the results by package ID(s). The packageidfilter is an optional parameter.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are relevance or titlename.  Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "titlename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Types of subjects to be returned. By default returns tli and bisac. Valid values are: bisac, tli, libraryofcongress and medical.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of titles that are part of a specified package.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titles"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/v2/{custid}/titles": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get List of Titles Regardless of Package",
        "description": "This operation allows you to search and retrieve a list of titles from EPKB regardless of the package(s) that the titles are a part of.  The response will reflect the context of the EBSCO customer ID included in the request.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term.  Keyword search that is applied to limit the results to titles that have the search term in the search field.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "description": "Field to search.  Both integer and string are supported.  Valid values are titlename, publisher, isxn, subject and zdbid.  It is also valid to use 0 for title name, 1 for publisher, 2 for isxn, 3 for subject or 4 for zdbid.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "titlename",
                "publisher",
                "isxn",
                "subject",
                "zdbid"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Valid values are all, selected, notselected and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for notselected, or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "resourcetype",
            "in": "query",
            "description": "Type of resource. Valid values are all, journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.  It is also valid to use 0 for all, 1 for journal, 2 for newsletter, 3 for report, 4 for proceedings, 5 for website, 6 for newspaper, 7 for unspecified, 8 for book, 9 for book series, 10 for database, 11 for thesis dissertation, 12 for streaming audio, 13 for streaming video, or 14 for audio book.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "journal",
                "newsletter",
                "report",
                "proceedings",
                "website",
                "newspaper",
                "unspecified",
                "book",
                "bookseries",
                "database",
                "thesisdissertation",
                "streamingaudio",
                "streamingvideo",
                "audiobook"
              ]
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search. Search types are any, contains, exactmatch, beginswith, proximity, exactphrase and advanced. It is also valid to use 0 for any, 1 for contains, 2 for exactmatch, 3 for beginswith, 4 for proximity, 5 for exactphrase or 6 for advanced.  searchtype is an optional parameter and defaults to contains if not provided.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "schema": {
              "type": "string",
              "enum": [
                "any",
                "contains",
                "exactmatch",
                "beginswith",
                "proximity",
                "exactphrase",
                "advanced"
              ]
            }
          },
          {
            "name": "packageidfilter",
            "in": "query",
            "description": "A comma-separated list of package ID(s). Limits the results by package ID(s). The packageidfilter is an optional parameter.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Valid values are relevance or titlename.  Default is relevance.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "titlename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response.",
            "required": true,
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packagefreeaccess",
            "in": "query",
            "description": "Limits the results based on Package Free Access. The filter options are (true, false, all), and the default is all.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "true",
                "false"
              ]
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Types of subjects to be returned. By default returns tli and bisac. Valid values are: bisac, tli, libraryofcongress and medical.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of titles that are part of a specified package.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titles"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/titles/{kbid}": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get Title Details Regardless of Package",
        "description": "This operation allows you to retrieve details for a particular title from EPKB regardless of the package that it is a part of.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support. This endpoint has been deprecated. Please use this endpoint instead: /v2/{custid}/titles/{kbid}",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Types of subjects to be returned. By default returns tli and bisac. Valid values are: bisac, tli, libraryofcongress and medical.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Title Response \n\n Details for the title.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titleDetails"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{custid}/holdings": {
      "get": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Download Holdings",
        "description": "This operation allows you to download customer holdings in KBART2 (JSON) format.  Before using this resource, you need to perform a Holdings Resource POST to populate holdings data to a staging area.\n\n**Deprecation Notice:** Please use GET /{custid}/exports/{exportid}. Use the links array of objects that specify a presigned URL to download the export file.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "Download format.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "kbart2"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response. Count can not exceed 4000.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Holdings details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/holdingsDetails"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      },
      "post": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Stage Holdings",
        "description": "This operation populates holdings data to a staging area.  You must perform this operation before using the GET holdings resources.  Customer holdings will be refreshed each time a POST is complete.  Hidden titles and packages are excluded from the holdings download.  If the customer has made changes since the last POST, another POST needs to be performed before using a GET holdings resource in order to download all of the changes.  If any metadata has changed since the last POST, you do not need to perform another POST in order to see the metadata changes in the GET holdings. \n\n**Deprecation Notice:** Please use POST /{custid}/exports.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "description": "force is used to force a new request.  force is an optional parameter and defaults to false if not provided.  Set force to true to recreate the holdings snapshot by overwriting the existing snapshot.  force parameter should not be used on a regular basis.  force is only to be used for resolving a stuck POST holdings request.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API.  You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The request to populate holdings has been accepted for processing, but the processing has not been completed.",
            "content": {}
          },
          "409": {
            "description": "Snapshot is currently in progress.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/409error"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{custid}/holdings/status": {
      "get": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Get Snapshot Status",
        "description": "This operation allows you to retrieve the status of a holdings snapshot.  The response reveals if the holdings snapshot is in progress, completed, not staged (none) or has failed.  The status enables you to decide when to download customer holdings (upon completion).  \n\n**Deprecation Notice:** Please use GET /{custid}/exports/{exportid}.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of the holdings snapshot.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/holdingsStatus"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/{custid}/exports": {
      "get": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Get Exports",
        "description": "This endpoint allows customers to retrieve details about all export requests of their holdings, including an array of objects that represent metadata about the single export. Parameters include a creation date, export ID, status, type, size, and links. The type of export can be one of KBART2, STANDARD, COST, or HOLDINGSEVENT. While the status can be one of QUEUED, INPROGRESS, or COMPLETED. The links array contains objects that specify a presigned URL to download the export file from. The URL is valid for 30 minutes. If the URL expires, a new URL can be requested from the API. \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "getCustidExports",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "p",
            "in": "query",
            "description": "Page Offset.  Starts at 1.",
            "required": false,
            "style": "form",
            "schema": {
              "maximum": 100,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ps",
            "in": "query",
            "description": "Page Size",
            "required": false,
            "style": "form",
            "schema": {
              "maximum": 500,
              "exclusiveMaximum": false,
              "minimum": 1,
              "exclusiveMinimum": false,
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of Export objects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Export"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Create Export Request",
        "description": "This operation enables customers to request an export file of their holdings in one of four formats: \"COST\", \"HoldingsEvent\", \"KBART2\" or \"STANDARD\". Export files will be generated with the most up-to-date holdings information available; however, any changes made to holdings after the request is made may not be reflected in the export. Export files will be deleted after 365 days. Customers are limited to a maximum of 500 export files.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "postCustidExports",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Export"
              },
              "examples": {
                "standard-nofilter": {
                  "summary": "JSON payload standard",
                  "value": {
                    "fileName": "testExport_standard_csv",
                    "format": "CSV",
                    "type": "STANDARD"
                  }
                },
                "standard-filter": {
                  "summary": "JSON payload with limiters",
                  "value": {
                    "fileName": "testExport_standardWithLimiters_csv",
                    "format": "CSV",
                    "type": "STANDARD",
                    "managedOrCustom": "MANAGED",
                    "packageContentTypes": [
                      "AGGREGATEDFULLTEXT"
                    ],
                    "resourceTypes": [
                      "JOURNAL"
                    ]
                  }
                },
                "kbart2-filter": {
                  "summary": "JSON payload KBART2",
                  "value": {
                    "fileName": "testExport_KBART2WithLimiters_tsv",
                    "format": "TSV",
                    "type": "KBART2",
                    "managedOrCustom": "MANAGED",
                    "packageContentTypes": [
                      "AGGREGATEDFULLTEXT"
                    ],
                    "resourceTypes": [
                      "JOURNAL"
                    ]
                  }
                },
                "holdingsevent-filter": {
                  "summary": "JSON payload holdings event",
                  "value": {
                    "fileName": "testExport_HoldingsEvent_xlsx",
                    "format": "XLSX",
                    "type": "HoldingsEvent",
                    "holdingsEvent": {
                      "endDate": "08-15-2022",
                      "eventActions": [
                        "IGNORED"
                      ],
                      "eventSource": [
                        "SSD"
                      ],
                      "startDate": "08-01-2022"
                    }
                  }
                },
                "cost-filter": {
                  "summary": "JSON payload Cost",
                  "value": {
                    "fileName": "testExport_cost_xlsx",
                    "format": "XLSX",
                    "type": "COST",
                    "costDownload": {
                      "currency": "USD",
                      "fromFiscalYear": 2021,
                      "toFiscalYear": 2021
                    }
                  }
                }
              }
            }
          },
          "description": "Export Request for a given type and format with a provided filename followed by optional parameters associated to the particular export type requested."
        },
        "responses": {
          "202": {
            "description": "Accepted",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                },
                "examples": {
                  "responseholdingsevent": {
                    "summary": "JSON response holdings event",
                    "value": {
                      "custId": "ns253365",
                      "id": "16066a30-47aa-40de-9ea4-8009d2899389",
                      "type": "HoldingsEvent",
                      "fileName": "testExport_HoldingsEvent_xlsx",
                      "status": "QUEUED",
                      "created": "2023-01-19T20:58:00.805993Z",
                      "format": "XLSX",
                      "holdingsEvent": {
                        "startDate": "08-01-2022",
                        "endDate": "08-15-2022",
                        "eventSource": [
                          "SSD"
                        ],
                        "eventActions": [
                          "IGNORED"
                        ]
                      }
                    }
                  },
                  "responsecost": {
                    "summary": "JSON response cost",
                    "value": {
                      "custId": "ns253365",
                      "id": "07ca08c3-2bf5-440c-aa17-9f7235ffed4b",
                      "type": "COST",
                      "fileName": "testExport_cost_xlsx",
                      "status": "QUEUED",
                      "created": "2023-01-19T21:05:01.428456Z",
                      "format": "xlsx",
                      "costDownload": {
                        "currency": "usd",
                        "fromFiscalYear": 2021,
                        "toFiscalYear": 2021
                      }
                    }
                  },
                  "standard-nofilter": {
                    "value": {
                      "created": "2023-02-01T22:32:33.653Z",
                      "custId": "ns334455",
                      "fileName": "FileName",
                      "format": "TSV",
                      "id": "9cc047c6-605f-40f5-be64-7f638124bcfd",
                      "status": "QUEUED",
                      "type": "STANDARD"
                    }
                  },
                  "standard-filter": {
                    "value": {
                      "created": "2023-02-01T22:32:33.653Z",
                      "custId": "ns334455",
                      "fileName": "FileName",
                      "format": "TSV",
                      "id": "9cc047c6-605f-40f5-be64-7f638124bcfd",
                      "managedOrCustom": "MANAGED_AND_CUSTOM",
                      "orderedThroughEbsco": false,
                      "packageContentTypes": [
                        "PRINT"
                      ],
                      "packageIds": [
                        "43"
                      ],
                      "resourceTypes": [
                        "BOOK"
                      ],
                      "status": "QUEUED",
                      "type": "STANDARD"
                    }
                  },
                  "kbart2-filter": {
                    "value": {
                      "created": "2023-02-01T22:32:33.653Z",
                      "custId": "ns334455",
                      "fileName": "FileName",
                      "format": "TSV",
                      "id": "9cc047c6-605f-40f5-be64-7f638124bcfd",
                      "managedOrCustom": "MANAGED_AND_CUSTOM",
                      "noteIds": [
                        "1123"
                      ],
                      "orderedThroughEbsco": false,
                      "packageContentTypes": [
                        "PRINT"
                      ],
                      "packageIds": [
                        "43"
                      ],
                      "resourceTypes": [
                        "BOOK"
                      ],
                      "status": "QUEUED",
                      "type": "KBART2"
                    }
                  },
                  "holdingsevent-filter": {
                    "value": {
                      "created": "2023-02-01T22:32:33.653Z",
                      "custId": "ns334455",
                      "fileName": "FileName",
                      "format": "TSV",
                      "holdingsEvent": {
                        "endDate": "09-01-2022",
                        "eventActions": "[\"IGNORED\"]",
                        "eventSource": "[\"SSD\"]",
                        "startDate": "08-31-2022"
                      },
                      "id": "9cc047c6-605f-40f5-be64-7f638124bcfd",
                      "status": "QUEUED",
                      "type": "HoldingsEvent"
                    }
                  },
                  "cost-filter": {
                    "value": {
                      "costDownload": {
                        "currency": "USD",
                        "fromFiscalYear": 2020,
                        "toFiscalYear": 2022
                      },
                      "created": "2023-02-01T22:32:33.653Z",
                      "custId": "ns334455",
                      "fileName": "FileName",
                      "format": "TSV",
                      "id": "9cc047c6-605f-40f5-be64-7f638124bcfd",
                      "status": "QUEUED",
                      "type": "COST"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/exports/{exportid}": {
      "get": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Get Export Export Id",
        "description": "This endpoint allows customers to retrieve details about a specific export request of their holdings, including an array of objects that represent metadata about the single export. Parameters include a creation date, export ID, status, type, size, and links. The type of export can be one of KBART2, STANDARD, COST, or HOLDINGSEVENT. The status can be one of QUEUED, INPROGRESS, or COMPLETED. The links array contains objects that specify a presigned URL to download the export file from. The URL is valid for 30 minutes. If the URL expires, a new URL can be requested from the API. \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "getV0CustidCustidExportidExportid",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportid",
            "in": "path",
            "description": "Export ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Export Object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Export"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Holdings Resources"
        ],
        "summary": "Delete Export by Export Id",
        "description": "This operation allows you to delete a previously created holdings export request by the export ID value. When an export is deleted via this method, the export request record and the file containing the holdings export data will be deleted; this action cannot be undone so use with caution.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "deleteV0CustidCustidExportidExportid",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "exportid",
            "in": "path",
            "description": "Export ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The server has successfully fulfilled the DELETE request.",
            "content": {}
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/packages/{packageid}/orders": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Related Orders for a Package",
        "operationId": "getOrdersByPackageUsingGET",
        "description": "This operation retrieves a list of GOBI eBook and EBSCO Subscription Services (ESS) E-Journal and Package Subscription orders associated with a particular package for a specific customer.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastorderid",
            "in": "query",
            "description": "Last Order ID.  Specifies the ID of the last order returned in the previous response. Use this parameter for pagination to retrieve the next set of orders. If not specified, the API will return the first page of orders.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page Size.  Specifies the number of orders to be returned per page.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Related orders for the requested package.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredOrderRetrieved"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/packages/{packageid}/events": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Get Order Event History for a Package",
        "operationId": "getPackageOrderHistoryUsingGET",
        "description": "This operation retrieves Auto-Population events related to GOBI eBook or EBSCO Subscription Services (ESS) E-Journal and Package Subscription orders for a specific package. Auto-Population automatically updates holdings information for electronic resources in a library's collection. The events returned by this operation provide information about when and how Auto-Population has updated the package holdings information.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order events for the requested package.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderEventRecord"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/packages/{packageid}/titles/{kbid}/orders": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get Related Orders for a Title",
        "description": "This operation retrieves a list of GOBI eBook and EBSCO Subscription Services (ESS) E-Journal and Package Subscription orders associated with a particular package-title for a specific customer.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "lastorderid",
            "in": "query",
            "description": "Last Order ID.  Specifies the ID of the last order returned in the previous response. Use this parameter for pagination to retrieve the next set of orders. If not specified, the API will return the first page of orders.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pagesize",
            "in": "query",
            "description": "Page Size.  Specifies the number of orders to be returned per page.",
            "required": false,
            "style": "form",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Related orders for the requested package-title.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StoredOrderRetrieved"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/packages/{packageid}/titles/{kbid}/events": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get Order Event History for a Title",
        "description": "This operation retrieves Auto-Population events related to GOBI eBook or EBSCO Subscription Services (ESS) E-Journal and Package Subscription orders for a specific package-title. Auto-Population automatically updates holdings information for electronic resources in a library's collection. The events returned by this operation provide information about when and how Auto-Population has updated the package-title holdings information.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "packageid",
            "in": "path",
            "description": "Package ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order events for the requested package-title.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderEventRecord"
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/titles/{kbid}/relationships": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "kbid",
          "in": "path",
          "description": "Title ID",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "description": "EBSCO Customer ID",
          "in": "path",
          "required": true
        },
        {
          "name": "x-api-key",
          "in": "header",
          "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get Title Relationships for a KBID",
        "tags": [
          "Title Resources"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TitleRelationship"
                },
                "examples": {
                  "Get Title Relationships Response": {
                    "value": {
                      "titleRelationships": [
                        {
                          "resourceRelationshipId": 0,
                          "source": {
                            "kbid": 100000000,
                            "resourceId": 100000000,
                            "name": "string"
                          },
                          "target": {
                            "kbid": 100000000,
                            "resourceId": 100000000,
                            "name": "string"
                          },
                          "type": "ABSORBED_BY",
                          "date": "2019-08-24T14:15:22Z"
                        }
                      ],
                      "total": 0
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "operationId": "get-title-relationships",
        "description": "This operation retrieves the title relationships for a given title identified via kbid. Currently, it returns the first degree parents, spouse, siblings, and children of the given title. Parameters include the kbid of the desired title and the string version of the customer id. The output is an array of related title objects and a count of the total related titles in the array. The related title objects include both the source and target kbid, the date the relationship was established, the type of relationship, and the identifier of the relationship.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support."
      }
    },
    "/v2/{custid}/titles/{kbid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "kbid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get Title Details Regardless of Package",
        "description": "This operation allows you to search and retrieve a list of titles from EPKB regardless of the package(s) that the titles are a part of. The response will reflect the context of the EBSCO customer ID included in the request.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "getTitleDetailsRegardlessOfPackageV2UsingGET",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "KBID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Type of subject to be returned. By default returns tli, bisac. Valid values are: bisac, tli, libraryofcongress, medical. It is also valid to use 0 for bisac, 1 for tli, 2 for libraryofcongress, 3 for medical",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "bisac",
                "libraryofcongress",
                "medical",
                "tli"
              ]
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includerelationships",
            "description": "Determines whether or not title relationship information will be returned. The possible values are 'true' or 'false. The default behavior when this parameter is not present is to not return relationship informant."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TitlesResponseV2"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v2/{custid}/lists/{listid}/titles": {
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Search Titles Within a List",
        "description": "This operation allows you to perform an advanced search on titles within a list by search term with various filtering options and search strategies.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "get-v2-listid-titles",
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": true,
            "description": "The maximum number of results to return in the response. Default is 10",
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "required": true,
            "description": "Valid values are relevance or titlename. Default is relevance.",
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "titlename"
              ]
            }
          },
          {
            "name": "packagefreeaccess",
            "in": "query",
            "description": "Limits the results based on Package Free Access. The filter options are (true, false, all), and the default is all.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "true",
                "false"
              ]
            }
          },
          {
            "name": "resourcetype",
            "in": "query",
            "description": "Type of resource. Valid values are all, journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook. It is also valid to use 0 for all, 1 for journal, 2 for newsletter, 3 for report, 4 for proceedings, 5 for website, 6 for newspaper, 7 for unspecified, 8 for book, 9 for book series, 10 for database, 11 for thesis dissertation, 12 for streaming audio, 13 for streaming video, or 14 for audio book.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "audiobook",
                "book",
                "bookseries",
                "database",
                "journal",
                "newsletter",
                "newspaper",
                "proceedings",
                "report",
                "streamingaudio",
                "streamingvideo",
                "thesisdissertation",
                "unspecified",
                "website"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term - When searching for titles without a titlesearchservice parameter, sort options will be by title name. When the titlesearchservice parameter is not null, the default sort is by relevance.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "required": true,
            "description": "Field to titlesearchservice. Valid values are titlename, publisher, isxn, subject, and zdbid. It is also valid to use 0 for title name, 1 for publisher, 2 for isxn, 3 for subject or 4 for zdbid.",
            "schema": {
              "type": "string",
              "enum": [
                "isxn",
                "publisher",
                "subject",
                "titlename",
                "zdbid"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results. Valid values are all, selected, notselected and orderedthroughebsco. It is also valid to use 0 for all, 1 for selected, 2 for notselected, or 3 for ordered through EBSCO.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "listid",
            "in": "path",
            "description": "List ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Type of subject to be returned. By default returns tli, bisac. Valid values are: bisac, tli, libraryofcongress, medical. It is also valid to use 0 for bisac, 1 for tli, 2 for libraryofcongress, 3 for medical",
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "bisac",
                "libraryofcongress",
                "medical",
                "tli"
              ]
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of titles that are part of a specified package.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/titles"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v2/{custid}/lists/{listid}/titles/{kbid}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "listid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "kbid",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Get Title Details by Package",
        "description": "This operation allows you to search and retrieve a list of titles from EPKB respective of the package(s) that the titles are a part of. The response will reflect the context of the EBSCO customer ID included in the request.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "operationId": "getTitleDetailsByPackageV2UsingGET",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listid",
            "in": "path",
            "description": "List ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjects",
            "in": "query",
            "description": "Type of subject to be returned. By default returns tli, bisac. Valid values are: bisac, tli, libraryofcongress, medical. It is also valid to use 0 for bisac, 1 for tli, 2 for libraryofcongress, 3 for medical",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "bisac",
                "libraryofcongress",
                "medical",
                "tli"
              ]
            }
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "includerelationships",
            "description": "Determines whether or not title relationship information will be returned. The possible values are 'true' or 'false'. The default behavior when this parameter is not present is to not return relationship information."
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationV2"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Title Resources"
        ],
        "summary": "Update a Title",
        "description": "This operation allows you to update title details for a unique listid/kbid pair.",
        "operationId": "updateTitleV2UsingPUT",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "listid",
            "in": "path",
            "description": "List ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "kbid",
            "in": "path",
            "description": "Title ID",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LocationV2"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "enum": [
                    "ACCEPTED",
                    "ALREADY_REPORTED",
                    "BAD_GATEWAY",
                    "BAD_REQUEST",
                    "BANDWIDTH_LIMIT_EXCEEDED",
                    "CHECKPOINT",
                    "CONFLICT",
                    "CONTINUE",
                    "CREATED",
                    "DESTINATION_LOCKED",
                    "EXPECTATION_FAILED",
                    "FAILED_DEPENDENCY",
                    "FORBIDDEN",
                    "FOUND",
                    "GATEWAY_TIMEOUT",
                    "GONE",
                    "HTTP_VERSION_NOT_SUPPORTED",
                    "IM_USED",
                    "INSUFFICIENT_SPACE_ON_RESOURCE",
                    "INSUFFICIENT_STORAGE",
                    "INTERNAL_SERVER_ERROR",
                    "I_AM_A_TEAPOT",
                    "LENGTH_REQUIRED",
                    "LOCKED",
                    "LOOP_DETECTED",
                    "METHOD_FAILURE",
                    "METHOD_NOT_ALLOWED",
                    "MOVED_PERMANENTLY",
                    "MOVED_TEMPORARILY",
                    "MULTIPLE_CHOICES",
                    "MULTI_STATUS",
                    "NETWORK_AUTHENTICATION_REQUIRED",
                    "NON_AUTHORITATIVE_INFORMATION",
                    "NOT_ACCEPTABLE",
                    "NOT_EXTENDED",
                    "NOT_FOUND",
                    "NOT_IMPLEMENTED",
                    "NOT_MODIFIED",
                    "NO_CONTENT",
                    "OK",
                    "PARTIAL_CONTENT",
                    "PAYLOAD_TOO_LARGE",
                    "PAYMENT_REQUIRED",
                    "PERMANENT_REDIRECT",
                    "PRECONDITION_FAILED",
                    "PRECONDITION_REQUIRED",
                    "PROCESSING",
                    "PROXY_AUTHENTICATION_REQUIRED",
                    "REQUESTED_RANGE_NOT_SATISFIABLE",
                    "REQUEST_ENTITY_TOO_LARGE",
                    "REQUEST_HEADER_FIELDS_TOO_LARGE",
                    "REQUEST_TIMEOUT",
                    "REQUEST_URI_TOO_LONG",
                    "RESET_CONTENT",
                    "SEE_OTHER",
                    "SERVICE_UNAVAILABLE",
                    "SWITCHING_PROTOCOLS",
                    "TEMPORARY_REDIRECT",
                    "TOO_EARLY",
                    "TOO_MANY_REQUESTS",
                    "UNAUTHORIZED",
                    "UNAVAILABLE_FOR_LEGAL_REASONS",
                    "UNPROCESSABLE_ENTITY",
                    "UNSUPPORTED_MEDIA_TYPE",
                    "UPGRADE_REQUIRED",
                    "URI_TOO_LONG",
                    "USE_PROXY",
                    "VARIANT_ALSO_NEGOTIATES"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LocationV2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/v2/{custid}/vendors/{vendorid}/lists": {
      "get": {
        "tags": [
          "Vendor Resources"
        ],
        "summary": "Search Packages by Vendor",
        "description": "This operation allows you to retrieve a list of packages from EPKB for a vendor including customer context.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "vendorid",
            "in": "path",
            "description": "Vendor ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term.  Keyword search that is applied to limit the results to packages that have the search term in the search field.  If no search is given, orderby must be set to 'name'.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "description": "Field to search.  Default is name.  Both integer and string are supported.  Valid values are name and keyword.  It is also valid to use 0 for name or 1 for keyword.  Name - Searches on Package Names and Alternative Names.  Keyword - Searches on Package Name, Alternative Name, Vendor Name, Managed Description and Custom Description.",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "keyword"
              ]
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search to be performed.  Default is contains.  Valid values are exactphrase, advanced, any, contains, exactmatch, beginswith. It is also valid to use 1 for exactphrase, 2 for advanced 3 for any, 4 for contains, 5 for exactmatch, or 6 for beginswith.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "schema": {
              "type": "string",
              "enum": [
                "exactphrase",
                "advanced",
                "any",
                "contains",
                "exactmatch",
                "beginswith"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Default is all.  Valid values are all, selected, notselected, and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for not selected or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "visibilitytype",
            "in": "query",
            "description": "Limits the results based on customer visibility status per product category.  Only functions when selection=selected is included in the request.  Valid values are visibleSomewhere, visibleInPF, visibleInFTF, includedInMARC, hiddenSomewhere, hiddenInPF, hiddenInFTF, excludedFromMARC.",
            "schema": {
              "type": "string",
              "enum": [
                "visibleSomewhere",
                "visibleInPF",
                "visibleInFTF",
                "includedInMARC",
                "hiddenSomewhere",
                "hiddenInPF",
                "hiddenInFTF",
                "excludedFromMARC"
              ]
            }
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Limits the results by type of package content.  Default is all.  Both integer and string are supported.  Valid values are all, aggregatedfulltext, abstractandindex, ebook, ejournal, print, unknown, onlinereference, streamingmedia or mixedcontent.  It is also valid to use 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "aggregatedfulltext",
                "abstractandindex",
                "ebook",
                "ejournal",
                "print",
                "unknown",
                "onlinereference",
                "streamingmedia",
                "mixedcontent"
              ]
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies order in which Package results are returned.  Default is relevance.  Valid values are packagename and relevance.",
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "packagename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response. Default is 10",
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.  Default is 1.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "highlighttag",
            "in": "query",
            "description": "Passing in any value will enable Hit Highlighting, which will highlight which parts of the Package result were matched on during searching. The string passed in is the tag highlighted results will be wrapped in. For example, a highlight tag of 'h' will return < h >The Package Hit < /h > in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjectschema",
            "in": "query",
            "description": "List of subject facet schema's to filter facets on",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "subjectfilter",
            "in": "query",
            "description": "Filters package search by given subjects. Accepts subject id or name. If multiple subjects are given, documents containing any of the given subjects will be returned.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "facetstoinclude",
            "in": "query",
            "description": "Select facets to include in response. Allowed value is 'subject'. Use subjectFacetCount to limit the number of subject facets returned. Default is 1000 when facetsToInclude contains subject.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjectfacetcount",
            "in": "query",
            "description": "Count of subject facets to return in the response. Default is 1000 when facetstoinclude contains subject, otherwise default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "patron",
            "in": "query",
            "description": "If true (patron search - used in PF), searches will treat custom data as an override to managed data. If null or false (admin search - used in HLM), searches will treat custom data as a supplement to managed data. \" +\n        \"This applies to the package name and package description fields.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "packagefreeaccess",
            "in": "query",
            "description": "Limits the results based on Package Free Access. The filter options are (true, false, all), and the default is all.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "true",
                "false"
              ]
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages from EPKB for a specific vendor ID and the total number of results.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagesResultV2"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v2/{custid}/lists": {
      "get": {
        "tags": [
          "Package Resources"
        ],
        "summary": "Advanced Package Search",
        "description": "This operation allows you to search for packages and returns a list of packages from EPKB.  The list is not limited to a single vendor ID.  The response will reflect the context of the EBSCO customer ID included in the request.  When searching for packages without a search parameter, the sort options will be by package name.  When the search parameter is not null, then the default sort is by relevance.  \n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "name": "custid",
            "in": "path",
            "description": "EBSCO Customer ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search Term.  Keyword search that is applied to limit the results to packages that have the search term in the search field.  If no search is given, orderby must be set to 'name'.  Special characters in the search term need to be URL encoded.  Ex: A&G encodes to A%26G.  The Swagger Explorer performs the search parameter encoding for the **Try it out!**.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchfield",
            "in": "query",
            "description": "Field to search.  Default is name.  Both integer and string are supported.  Valid values are name and keyword.  It is also valid to use 0 for name or 1 for keyword. Name - Searches on Package Names and Alternative Names.  Keyword - Searches on Package Name, Alternative Name, Vendor Name, Managed Description and Custom Description.",
            "schema": {
              "type": "string",
              "enum": [
                "name",
                "keyword"
              ]
            }
          },
          {
            "name": "searchtype",
            "in": "query",
            "description": "Type of search to be performed.  Default is contains.  Valid values are exactphrase, advanced, any, contains, exactmatch, beginswith. It is also valid to use 1 for exactphrase, 2 for advanced 3 for any, 4 for contains, 5 for exactmatch, or 6 for beginswith.  For more information on the search types, see [Using Search Types](https://developer.ebsco.com/knowledge-services/holdingsiq/docs/search-types).",
            "schema": {
              "type": "string",
              "enum": [
                "exactphrase",
                "advanced",
                "any",
                "contains",
                "exactmatch",
                "beginswith"
              ]
            }
          },
          {
            "name": "selection",
            "in": "query",
            "description": "Limits the results.  Default is all.  Valid values are all, selected, notselected, and orderedthroughebsco.  It is also valid to use 0 for all, 1 for selected, 2 for not selected or 3 for ordered through EBSCO.  When you filter by all(0), the total results count takes selected and not selected into consideration.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "selected",
                "notselected",
                "orderedthroughebsco"
              ]
            }
          },
          {
            "name": "visibilitytype",
            "in": "query",
            "description": "Limits the results based on customer visibility status per product category.  Only functions when selection=selected is included in the request.  Valid values are visibleSomewhere, visibleInPF, visibleInFTF, includedInMARC, hiddenSomewhere, hiddenInPF, hiddenInFTF, excludedFromMARC.",
            "schema": {
              "type": "string",
              "enum": [
                "visibleSomewhere",
                "visibleInPF",
                "visibleInFTF",
                "includedInMARC",
                "hiddenSomewhere",
                "hiddenInPF",
                "hiddenInFTF",
                "excludedFromMARC"
              ]
            }
          },
          {
            "name": "contenttype",
            "in": "query",
            "description": "Limits the results by type of package content.  Default is all.  Both integer and string are supported.  Valid values are all, aggregatedfulltext, abstractandindex, ebook, ejournal, print, unknown, onlinereference, streamingmedia or mixedcontent.  It is also valid to use 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "aggregatedfulltext",
                "abstractandindex",
                "ebook",
                "ejournal",
                "print",
                "unknown",
                "onlinereference",
                "streamingmedia",
                "mixedcontent"
              ]
            }
          },
          {
            "name": "orderby",
            "in": "query",
            "description": "Specifies order in which Package results are returned.  Default is relevance.  Valid values are packagename and relevance.",
            "schema": {
              "type": "string",
              "enum": [
                "relevance",
                "packagename"
              ]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The maximum number of results to return in the response. Default is 10",
            "schema": {
              "type": "integer",
              "enum": [
                5,
                10,
                20
              ]
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Page Offset.  Starts at 1.  Default is 1.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "highlighttag",
            "in": "query",
            "description": "Passing in any value will enable Hit Highlighting, which will highlight which parts of the Package result were matched on during searching. The string passed in is the tag highlighted results will be wrapped in. For example, a highlight tag of 'h' will return < h >The Package Hit < /h > in the response.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjectschema",
            "in": "query",
            "description": "List of subject facet schema's to filter facets on",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "subjectfilter",
            "in": "query",
            "description": "Filters package search by given subjects. Accepts subject id or name. If multiple subjects are given, documents containing any of the given subjects will be returned.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "facetstoinclude",
            "in": "query",
            "description": "Select facets to include in response. Allowed value is 'subject'. Use subjectFacetCount to limit the number of subject facets returned. Default is 1000 when facetsToInclude contains subject.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subjectfacetcount",
            "in": "query",
            "description": "Count of subject facets to return in the response. Default is 1000 when facetstoinclude contains subject, otherwise default is 0.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "patron",
            "in": "query",
            "description": "If true (patron search - used in PF), searches will treat custom data as an override to managed data. If null or false (admin search - used in HLM), searches will treat custom data as a supplement to managed data. \" +\n        \"This applies to the package name and package description fields.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "packagefreeaccess",
            "in": "query",
            "description": "Limits the results based on Package Free Access. The filter options are (true, false, all), and the default is all.",
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "true",
                "false"
              ]
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of packages and the total packages found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PackagesResultV2"
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/v1/{custid}/subjects/{schemaid}": {
      "get": {
        "tags": [
          "Subject Resource"
        ],
        "summary": "Get Available Subjects By Schema Id",
        "description": "This operation retrieves all available subjects within a specified subject schema. If 0 is used for the schema id parameter, subjects for all subject schemas will be returned. In the response, the properties for each item in the list includes the subject name, parent id, subject id, schema id, schema name, and subject hierarchy.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "name": "custid",
            "description": "EBSCO Customer ID",
            "in": "path",
            "required": true
          },
          {
            "name": "schemaid",
            "in": "path",
            "description": "The schema id used to filter results (0 = all schemas, 1 = General, 3 = Library of Congress, 4 = Medical, 5 = TLI, 6 = BISAC)",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "x-api-key",
            "in": "header",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of available subjects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableSubjectResponse"
                },
                "examples": {
                  "Get Available Subjects By Schema Id Response": {
                    "value": [
                      {
                        "subjectName": "Agriculture (General)",
                        "subjectId": 28451,
                        "schemaId": 3,
                        "schemaName": "Library of Congress",
                        "subjectHierarchy": "Agriculture (General)"
                      },
                      {
                        "subjectName": "Agricultural chemistry.  Agricultural chemicals",
                        "parentId": 28451,
                        "subjectId": 28457,
                        "schemaId": 3,
                        "schemaName": "Library of Congress",
                        "subjectHierarchy": "Agriculture (General) -- Agricultural chemistry.  Agricultural chemicals"
                      },
                      {
                        "subjectName": "Agricultural conservation",
                        "parentId": 28451,
                        "subjectId": 28458,
                        "schemaId": 3,
                        "schemaName": "Library of Congress",
                        "subjectHierarchy": "Agriculture (General) -- Agricultural conservation"
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        }
      }
    },
    "/{custid}/categories": {		
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Category Resources"
        ],		  
        "summary": "Get Package Categories",
        "operationId": "post-custid-categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "List of categories owned by the customer corresponding to the ids requested. The list is sorted by categoryId in descending order.",
                  "items": {
                    "$ref": "#/components/schemas/category"
                  }
                },
                "examples": {
                  "Category with package assignments, but is not a parent or subcategory": {
                    "value": [
                      {
                        "categoryId": 1,
                        "categoryName": "Basic Category",
                        "parentId": null,
                        "childIds": null,
                        "listIds": [
                          1,
                          2,
                          3
                        ],
                        "rank": 1
                      }
                    ]
                  },
                  "Child category with package assignments": {
                    "value": [
                      {
                        "categoryId": 2,
                        "categoryName": "Child category",
                        "parentId": {
                          "categoryId": 1,
                          "categoryName": "Parent category",
                          "listIds": [
                            1,
                            4
                          ],
                          "rank": 1
                        },
                        "childIds": null,
                        "listIds": [
                          4,
                          6,
                          8
                        ],
                        "rank": 0
                      }
                    ]
                  },
                  "Parent category with children and package assignments": {
                    "value": [
                      {
                        "categoryId": 1,
                        "categoryName": "Parent Category",
                        "parentId": null,
                        "childIds": [
                          {
                            "categoryId": 2,
                            "categoryName": "Child Category 1",
                            "listIds": [
                              2,
                              4
                            ],
                            "rank": 0
                          },
                          {
                            "categoryId": 3,
                            "categoryName": "Child Category 2",
                            "listIds": [
                              1,
                              3
                            ],
                            "rank": 0
                          }
                        ],
                        "listIds": [
                          1,
                          2
                        ],
                        "rank": 10
                      }
                    ]
                  },
                  "Multiple Categories returned": {
                    "value": [
                      {
                        "categoryId": 1,
                        "categoryName": "Basic Category 1",
                        "parentId": null,
                        "childIds": null,
                        "listIds": [
                          123
                        ],
                        "rank": 1
                      },
                      {
                        "categoryId": 2,
                        "categoryName": "Basic Category 2",
                        "parentId": null,
                        "childIds": null,
                        "listIds": [
                          123,
                          789
                        ],
                        "rank": 2
                      },
                      {
                        "categoryId": 3,
                        "categoryName": "Parent Category",
                        "parentId": null,
                        "childIds": [
                          {
                            "categoryId": 4,
                            "categoryName": "Child Category",
                            "listIds": [
                              468
                            ],
                            "rank": 0
                          }
                        ],
                        "listIds": [
                          123
                        ],
                        "rank": 10
                      },
                      {
                        "categoryId": 4,
                        "categoryName": "Child Category",
                        "parentId": {
                          "categoryId": 3,
                          "categoryName": "Parent Category",
                          "listIds": [
                            123
                          ],
                          "rank": 10
                        },
                        "childIds": null,
                        "listIds": [
                          468
                        ],
                        "rank": 0
                      }
                    ]
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "description": "This operation allows the retrieval of existing package categories for a customer. To retrieve all categories for a customer, send an empty array for the categoryIds field. To retrieve specific categories for a customer, send the desired ids for the categories in the array of the categoryIds field.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "required": true,
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Array of categoryIds to retrieve",
                "type": "array",
                "items": {
                   "type": "integer"
                }			
              },
              "examples": {
                "Get all categories for the customer": {
                  "value": []
                },
                "Get specific categories for the customer": {
                  "value": [1,2,3]
                }
              }
            }
          },
          "description": "Array of categoryIds to retrieve. The array can include one or more categoryIds or be sent as an empty array to retrieve all categories."
        }
      }
    },
    "/{custid}/category": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        }
      ],
      "post": {
		"tags": [
          "Category Resources"
        ],
        "summary": "Create Package Category",
        "operationId": "post-custid-category",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Id of the created category",
                  "properties": {
                    "categoryId": {
                      "type": "integer",
                      "description": "Id of the created category"
                    }
                  }
                },
                "examples": {
                  "Example 1": {
                    "value": {
                      "categoryId": 1
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "description": "This operation allows the creation of a package category. Only one category can be created per call. It allows both the basic category information to be set and for assignments to be made. The category can be assigned a child or parent given the child or parent specified exists.  Also, the category can be given a name, assigned a rank, and assigned to existing selected packages. \n\nA category name is required and cannot be blank, but all other fields are optional. The rank will default to 1 if not supplied for a parent category. It will be 0 for all child categories regardless of input. The maximum number of assignable packages is equal to the number of selected packages a customer owns. \n\nFor each customer, there is a maximum of 10 parent categories and a maximum of 50 children per parent. A category is classified as a parent if either of these cases are true:\n1. The category has one or more categories assigned as a child of it.\n2. The category has no categories assigned as a child of it and it is not assigned as a child of another category.\n\nA category is classified as a child if it has a parent category assigned. A child category can only have one parent. It cannot be both a child and parent category.  The operation will fail if an attempt is made to assign both fields.\n  \n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryRequest"
              },
              "examples": {
				"Create a Category": {
				  "value": {
                       "categoryName": "Books"
                    }
				},
                "Create a Category with only an assigned package and rank": {
                  "value": {
                    "categoryName": "Books",
                    "parentCategoryId": null,
                    "childCategoryIds": null,
                    "listIds": [
                      100
                    ],
                    "rank": 1
                  }
                },
                "Create a child category with package assignments": {
                  "value": {
                    "categoryName": "Geography",
                    "parentId": 123,
                    "childIds": null,
                    "listIds": [
                      456,
                      789
                    ],
                    "rank": null
                  }
                },
                "Create a parent category with assigned children ": {
                  "value": {
                    "categoryName": "Parent Category",
                    "parentId": null,
                    "childIds": [
                      123
                    ],
                    "listIds": null,
                    "rank": 1
                  }
                }
              }
            }
          },
          "description": "Details of the category to create"
        }
      }
    },
    "/{custid}/category/{categoryId}": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "categoryId",
          "in": "path",
          "required": true
        }
      ],
      "put": {
        "tags": [
          "Category Resources"
        ],		  
        "summary": "Update a Package Category",
        "operationId": "put-custid-categoy-categoyId",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "description": "This operation allows you to edit an existing package category. Only one category can be edited per call. The category name and rank can be changed.  A parent category can be changed or assigned/unassigned.  Child categories can also be changed or assigned/unassigned and packages can be assigned/unassigned. \n\nA category name cannot be removed or made blank. The maximum number of assignable packages is equal to the number of selected packages a customer owns. A child category rank will always remain 0 regardless of input. If this operation results in a child category becoming a parent category, the rank will remain 0 unless changed by the customer.\n\nFor each customer, there is a maximum of 10 parent categories and a maximum of 50 children per parent. A category is classified as a parent if either of these cases are true:\n1. The category has one or more categories assigned as a child of it.\n2. The category has no categories assigned as a child of it and it is not assigned as a child of another category.\n\nA category is classified as a child if it has a parent category assigned. A child category can only have one parent. It cannot be both a child and parent category. The operation will fail if an attempt is made to assign both fields.\n\nIf an operation would result in either parent or child category maximums being exceeded, it will fail with an error. \n  \n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categoryRequest"
              },
              "examples": {
                "Update category name/rank and remove package assignments": {
                  "value": {
                    "categoryName": "Updated Books",
                    "parentCategoryId": null,
                    "childCategoryIds": null,
                    "listIds": null,
                    "rank": 2
                  }
                },
                "Make a category a subcategory of another": {
                  "value": {
                    "categoryName": "Geography",
                    "parentId": 123,
                    "childIds": null,
                    "listIds": [
                      456,
                      789
                    ],
                    "rank": null
                  }
                }
              }
            }
          },
          "description": "Data to edit on the existing category"
        }
      }
    },
    "/{custid}/deleteCategories": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "custid",
          "in": "path",
          "required": true
        }
      ],
      "post": {
        "tags": [
          "Category Resources"
        ],		  
        "summary": "Delete Categories",
        "operationId": "delete-custid-deleteCategories",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": "Unexpected Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/errors"
                }
              }
            }
          }
        },
        "description": "This operation allows you to remove package categories. At least one or more category ids must be included in the request.  An empty array will result in an error. The delete includes the removal of both the category itself and any package assignments it had.\n\nIf a parent category is deleted, ALL categories assigned to it as a child category will also be deleted with their package assignments.\n\n  **Please Note:**  You will need an API key to gain access to the API through our interactive documentation. If you require an API key, please contact EBSCO customer support.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "x-api-key",
            "description": "Unique code assigned by EBSCO to grant you access to this API.  The API key needs to be a header parameter for every operation in order to access this API. You will need an API key to use the interactive documentation.  If you require an API key, please contact EBSCO customer support.",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Array of categoryIds to delete",
                "properties": {
                  "categoryIds": {
                    "type": "array",
                    "description": "Array of categoryIds to delete",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              },
              "examples": {
                "Example 1": {
                  "value": {
                    "categoryIds": [
                      1,
                      2,
                      3
                    ]
                  }
                }
              }
            }
          },
          "description": "Array of categoryIds to delete"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "errors": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/errorModel"
        }
      },
      "409error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Snapshot is currently in progress.",
            "example": "Snapshot in progress"
          },
          "code": {
            "type": "integer",
            "description": "Error Number",
            "format": "int32",
            "example": 1010
          },
          "subcode": {
            "type": "integer",
            "description": "Error number specific to the underlying API.",
            "format": "int32"
          }
        }
      },
      "404error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Customer is not found.",
            "example": "Customer not found"
          },
          "code": {
            "type": "integer",
            "description": "Error Number",
            "format": "int32"
          },
          "subcode": {
            "type": "integer",
            "description": "Error number specific to the underlying API.",
            "format": "int32"
          }
        }
      },
      "403error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "User is not authorized to access this resource",
            "example": "User is not authorized to access this resource"
          },
          "code": {
            "type": "integer",
            "description": "Error Number",
            "format": "int32"
          },
          "subcode": {
            "type": "integer",
            "description": "Error number specific to the underlying API.",
            "format": "int32"
          }
        }
      },
      "errorModel": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Text describing the error.",
            "example": "Invalid APIKEY"
          },
          "code": {
            "type": "integer",
            "description": "Error Number",
            "format": "int32",
            "example": 1003
          },
          "subcode": {
            "type": "integer",
            "description": "Error number specific to the underlying API.",
            "format": "int32"
          }
        }
      },
      "vendors": {
        "required": [
          "totalResults",
          "vendors"
        ],
        "type": "object",
        "properties": {
          "vendors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/vendor"
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found.",
            "example": 5
          }
        },
        "description": "List of vendors matching the vendor name and the total number of results found."
      },
      "packages": {
        "required": [
          "packagesList",
          "totalResults"
        ],
        "type": "object",
        "properties": {
          "packagesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/package"
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found.",
            "example": 5
          }
        },
        "description": "List of packages from EPKB - not limited to a single vendor id - and the total number of results found."
      },
      "titles": {
        "type": "object",
        "description": "List of titles regardless of package from EPKB and the total number of results found.",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found.",
            "example": 5
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TitlesV2"
            }
          },
          "facets": {
            "$ref": "#/components/schemas/Facets"
          }
        },
        "required": [
          "totalResults"
        ]
      },
      "Facets": {
        "title": "Facets",
        "type": "object",
        "properties": {
          "packages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FacetsModel"
            },
            "description": "List of package aggregations calculated from title search results."
          }
        },
        "description": "List of data object aggregations calculated from title search results."
      },
      "FacetsModel": {
        "title": "FacetsModel",
        "type": "object",
        "properties": {
          "parentId": {
            "type": "integer",
            "description": "Id of a Subject's Parent",
            "example": "35407"
          },
          "schema": {
            "type": "string",
            "description": "Schema of a Subject",
            "example": "Library of Congress"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Id of a Facet",
            "example": 5207
          },
          "name": {
            "type": "string",
            "description": "Name of a Facet",
            "example": "EBSCO eBooks"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Count of results matching the Facet",
            "example": 1
          }
        },
        "description": "List of package characteristics."
      },
      "vendor": {
        "required": [
          "vendorId",
          "vendorName"
        ],
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "packagesTotal": {
            "type": "integer",
            "description": "Package total for this vendor.",
            "example": 611
          },
          "packagesSelected": {
            "type": "integer",
            "description": "Total number of packages from the vendor that are selected in the customer's account.",
            "example": 30
          },
          "isCustomer": {
            "type": "boolean",
            "description": "IsCustomer is true if a customer is a vendor.  The customer vendor is used for custom packages.",
            "example": false
          },
          "vendorToken": {
            "type": "string",
            "description": "Vendor tokens are variables in content URLs that identify the customer. The vendorToken is the token (text) within the URL that needs to be replaced with a institute-specific value.",
            "example": "[[galesiteid]]"
          }
        },
        "description": "This object represents data elements that describe a vendor."
      },
      "vendorDetails": {
        "required": [
          "vendorId",
          "vendorName"
        ],
        "type": "object",
        "properties": {
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "packagesTotal": {
            "type": "integer",
            "description": "Package total for this vendor.",
            "example": 611
          },
          "packagesSelected": {
            "type": "integer",
            "description": "Total number of packages from the vendor that are selected in the customer's account.",
            "example": 30
          },
          "isCustomer": {
            "type": "boolean",
            "description": "IsCustomer is true if a customer is a vendor.  The customer vendor is used for custom packages.",
            "example": false
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "vendorToken": {
            "$ref": "#/components/schemas/tokenInfo"
          }
        },
        "description": "This object represents data elements that describe a vendor."
      },
      "package": {
        "required": [
          "packageId",
          "packageName"
        ],
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "isCustom": {
            "type": "boolean",
            "description": "isCustom is true if a customer is the vendor.  The customer vendor is used for custom packages.",
            "example": true
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "titleCount": {
            "type": "integer",
            "description": "Numeric value indicating the title count of the package.",
            "example": 1
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "isOrderedThroughEbsco": {
            "type": "boolean",
            "example": false,
            "description": "Limiter to include only records associated with an EBSCO order."
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "selectedCount": {
            "type": "integer",
            "description": "Numeric value indicating the selected count of the package.",
            "example": 1
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "contentType": {
            "type": "string",
            "description": "Indicates the content type of the package.",
            "example": "aggregatedfulltext"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type.  Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "availableForSelection": {
            "type": "boolean",
            "description": "availableForSelection is true if the package is available for full selection.  Otherwise, it returns false.",
            "example": true
          }
        },
        "description": "This object represents data elements that describe a vendor package."
      },
      "titleDetails": {
        "required": [
          "pubType",
          "titleId",
          "titleName"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "www.ebsco.com"
          },
          "identifiersList": {
            "type": "array",
            "description": "Identifiers",
            "items": {
              "$ref": "#/components/schemas/identifier"
            }
          },
          "subjectsList": {
            "type": "array",
            "description": "Subjects",
            "items": {
              "$ref": "#/components/schemas/subj"
            }
          },
          "isTitleCustom": {
            "type": "boolean",
            "description": "Is this a custom title owned by the customer.",
            "example": false
          },
          "alternateTitleList": {
            "type": "array",
            "description": "Alternate Titles",
            "items": {
              "$ref": "#/components/schemas/alternateTitle"
            }
          },
          "pubType": {
            "type": "string",
            "description": "Publication Type",
            "example": "Journal"
          },
          "customerResourcesList": {
            "type": "array",
            "description": "Customer Resources List",
            "items": {
              "$ref": "#/components/schemas/customerResources"
            }
          },
          "description": {
            "type": "string",
            "description": "Title Description",
            "example": "Description Test."
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Is this title peer reviewed.",
            "example": false
          },
          "contributorsList": {
            "type": "array",
            "description": "Contributors List",
            "items": {
              "$ref": "#/components/schemas/contributorID"
            }
          }
        },
        "description": "This object represents data elements that describe a title."
      },
      "titleROP": {
        "type": "object",
        "description": "This object represents data elements that describe a title.",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "www.ebsco.com"
          },
          "identifiersList": {
            "type": "array",
            "description": "Identifiers",
            "items": {
              "$ref": "#/components/schemas/identifier"
            }
          },
          "subjectsList": {
            "type": "array",
            "description": "Subjects",
            "items": {
              "$ref": "#/components/schemas/nItem"
            }
          },
          "isTitleCustom": {
            "type": "boolean",
            "description": "Is this a custom title owned by the customer.",
            "example": false
          },
          "pubType": {
            "type": "string",
            "description": "Publication Type",
            "example": "Journal"
          },
          "customerResourcesList": {
            "type": "array",
            "description": "Customer Resources List",
            "items": {
              "$ref": "#/components/schemas/customerResourcesTitleROP"
            }
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "Description"
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "contributorsList": {
            "type": "array",
            "description": "Contributor ID List",
            "items": {
              "$ref": "#/components/schemas/contributorID"
            }
          },
          "alternateTitleList": {
            "type": "array",
            "description": "Alternate Titles",
            "items": {
              "$ref": "#/components/schemas/alternateTitle"
            }
          }
        },
        "required": [
          "titleId",
          "titleName",
          "pubType"
        ]
      },
      "packageIdDetails": {
        "type": "object",
        "description": "Package details for a specific package ID.",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "isCustom": {
            "type": "boolean",
            "description": "IsCustom is true if a customer is the vendor.  The customer vendor is used for custom packages.",
            "example": true
          },
          "titleCount": {
            "type": "integer",
            "description": "Numeric value indicating the title count of the package.",
            "example": 1
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "selectedCount": {
            "type": "integer",
            "description": "Numeric value indicating the number of titles in packages selected in the customer account.",
            "example": 1
          },
          "contentType": {
            "type": "string",
            "description": "Indicates the content type of the package.",
            "example": "aggregatedfulltext"
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "managedDescription": {
            "type": "string",
            "description": "The managed description of the package.",
            "example": "Package of medicinal journals"
          },
          "customDescription": {
            "type": "string",
            "description": "The custom description of the package.",
            "example": "Package of medicinal journals (custom)"
          },
          "managedAltNames": {
            "type": "array",
            "description": "The list of managed alternate names for the package.",
            "minItems": 0,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed.",
            "example": true
          },
          "allowEbscoToAddTitles": {
            "type": "boolean",
            "description": "Indicates if EBSCO is allowed to add titles.  If the package type is custom, then allowEbscoToAddTitles will always be set to false.",
            "example": true
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenInfo"
          },
          "url": {
            "type": "string",
            "description": "The url of the package.",
            "example": "https://link.gale.com/apps/CDB?u=[[galesiteid]]"
          },
          "availableForSelection": {
            "type": "boolean",
            "description": "availableForSelection is true if the package is available for full selection.  Otherwise, it returns false.",
            "example": true
          },
          "customAltNames": {
            "type": "array",
            "description": "The list of custom alternate names for the package",
            "minItems": 0,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "customDisplayName": {
            "type": "string",
            "description": "The customized display name for a package."
          }
        },
        "required": [
          "packageId",
          "packageName"
        ]
      },
      "packageIdDetailsV1": {
        "type": "object",
        "description": "Package details for a specific package ID.",
        "properties": {
          "listId": {
            "type": "integer",
            "description": "Unique identifier for a list.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "isCustom": {
            "type": "boolean",
            "description": "IsCustom is true if a customer is the vendor.  The customer vendor is used for custom packages.",
            "example": true
          },
          "titleCount": {
            "type": "integer",
            "description": "Numeric value indicating the title count of the package.",
            "example": 1
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "selectedCount": {
            "type": "integer",
            "description": "Numeric value indicating the number of titles in packages selected in the customer account.",
            "example": 1
          },
          "contentType": {
            "type": "string",
            "description": "Indicates the content type of the package.",
            "example": "aggregatedfulltext"
          },
          "visibility": {
            "type": "array",
            "description": "Visibility details for pf,ftf and marc",
            "items": {
              "$ref": "#/components/schemas/VisibilityDataV1"
            }
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "managedDescription": {
            "type": "string",
            "description": "The managed description of the package.",
            "example": "Package of medicinal journals"
          },
          "customDescription": {
            "type": "string",
            "description": "The custom description of the package.",
            "example": "Package of medicinal journals (custom)"
          },
          "managedAltNames": {
            "type": "array",
            "description": "The list of managed alternate names for the package.",
            "minItems": 0,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed.",
            "example": true
          },
          "allowEbscoToAddTitles": {
            "type": "boolean",
            "description": "Indicates if EBSCO is allowed to add titles.  If the package type is custom, then allowEbscoToAddTitles will always be set to false.",
            "example": true
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenInfo"
          },
          "url": {
            "type": "string",
            "description": "The url of the package.",
            "example": "https://link.gale.com/apps/CDB?u=[[galesiteid]]"
          },
          "availableForSelection": {
            "type": "boolean",
            "description": "availableForSelection is true if the package is available for full selection.  Otherwise, it returns false.",
            "example": true
          },
          "customAltNames": {
            "type": "array",
            "description": "The list of custom alternate names for the package",
            "minItems": 0,
            "maxItems": 10,
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "customDisplayName": {
            "type": "string",
            "description": "The customized display name for a package."
          },
          "subjectAssociations": {
            "type": "array",
            "description": "Subjects associated with the package",
            "items": {
              "$ref": "#/components/schemas/PackageSubjectAssociation"
            }
          },
          "packageFreeAccess": {
            "type": "boolean",
            "description": "Indicates if the package is freely available."
          }
        },
        "required": [
          "packageName"
        ]
      },
      "customerResources": {
        "required": [
          "packageId",
          "packageName",
          "packageType",
          "proxy"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyURL"
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Is the Package Custom.",
            "example": false
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID",
            "example": 123456789
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": false
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": false
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Managed Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/nItem"
            }
          },
          "customCoverageOwnership": {
            "type": "string",
            "description": "Custom Coverage Ownership. Valid values are Set By Customer or Set By EP.",
            "example": "Set By EP"
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "managedEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriodNull"
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          },
          "selectedBy": {
            "type": "string",
            "description": "The resource last selected by EBSCO or the customer.",
            "example": ""
          }
        },
        "description": "This object represents data elements that describe customer resources information."
      },
      "customerResourcesCustom": {
        "required": [
          "packageId",
          "packageName",
          "packageType",
          "proxy"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Is the Package Custom.",
            "example": true
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID",
            "example": 123456789
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": false
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/nItem"
            }
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "managedEmbargoPeriod": {
            "type": "object",
            "properties": {},
            "description": "Null Managed Embargo Period"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          }
        },
        "description": "This object represents data elements that describe customer resources information."
      },
      "customerResourcesTitleROP": {
        "required": [
          "packageId",
          "packageName",
          "packageType"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyURL"
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Is the Package Custom.",
            "example": false
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "EBSCO"
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID",
            "example": 123456789
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": false
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": false
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Managed Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/nItem"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "managedEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          }
        },
        "description": "This object represents data elements that describe customer resources information."
      },
      "coverageDates": {
        "required": [
          "beginCoverage",
          "endCoverage"
        ],
        "type": "object",
        "properties": {
          "beginCoverage": {
            "type": "string",
            "description": "Coverage Start Date",
            "example": "2002-02-01"
          },
          "endCoverage": {
            "type": "string",
            "description": "Coverage End Date",
            "example": "2020-01-02"
          }
        },
        "description": "Dates of Coverage"
      },
      "identifier": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier Value",
            "example": "1"
          },
          "source": {
            "type": "string",
            "description": "Resource Identifier",
            "example": "AtoZ"
          },
          "subtype": {
            "type": "integer",
            "description": "Sub-type for the indentifier.  This is used by only some identifiers to designate Print, Online, etc.  Empty=0, Print=1, Online=2, Preceding=3, Succeeding=4, Regional=5, Linking=6 and Invalid=7",
            "example": 1
          },
          "type": {
            "type": "integer",
            "description": "The type of identifier.  ISSN=0, ISBN=1, TSDID=2, SPID=3, EjsJournaID=4, NewsbankID=5, ZDBID=6, EPBookID=7, Mid=8, or BHM=9",
            "example": 1
          }
        },
        "description": "Identifier"
      },
      "subj": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of subject.  Valid values are BISAC and TLI.",
            "example": "BISAC",
            "enum": [
              "BISAC",
              "TLI"
            ]
          },
          "subject": {
            "type": "string",
            "description": "Subject",
            "example": "PHILOSOPHY / Movements / Critical Theory"
          }
        },
        "description": "Subject"
      },
      "nItem": {
        "type": "object",
        "description": "Empty Item"
      },
      "embargoPeriod": {
        "required": [
          "embargoUnit",
          "embargoValue"
        ],
        "type": "object",
        "properties": {
          "embargoUnit": {
            "type": "string",
            "description": "The unit of time to use for the embargo - Days, Weeks, Months or Years.",
            "example": "Days",
            "enum": [
              "Days",
              "Weeks",
              "Months",
              "Years"
            ]
          },
          "embargoValue": {
            "type": "integer",
            "description": "The embargo value (number of embargoUnits).  A Null value means there is no embargo.",
            "example": 1
          }
        },
        "description": "Embargo Period"
      },
      "embargoPeriodNull": {
        "required": [
          "embargoUnit",
          "embargoValue"
        ],
        "type": "object",
        "properties": {
          "embargoUnit": {
            "type": "string",
            "description": "The unit of time to use for the embargo - Days, Weeks, Months or Years.",
            "example": null,
            "enum": [
              "Days",
              "Weeks",
              "Months",
              "Years"
            ]
          },
          "embargoValue": {
            "type": "integer",
            "description": "The embargo value (number of embargoUnits).  A Null value means there is no embargo.",
            "example": 0
          }
        },
        "description": "Embargo Period"
      },
      "selectPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          }
        },
        "description": "This object represents data elements that describe the payload to select a package or package-title."
      },
      "selectPayloadTitle": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          }
        },
        "description": "This object represents data elements that describe the payload to select a package-title."
      },
      "setCustomCoverageIncludingHidePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": true
          }
        },
        "description": "This object represents data elements that describe the payload to set custom coverage including hiding titles."
      },
      "setHidePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if titles are hidden.",
            "example": true
          }
        },
        "description": "This object represents data elements to hide a package or a package-title."
      },
      "setHidePayloadTitle": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if titles are hidden.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          }
        },
        "description": "This object represents data elements to hide a package-title."
      },
      "setUserDefinedFieldsPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          }
        },
        "description": "This object represents data elements to set user defined fields."
      },
      "setCustomCoverageExcludeHidePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if titles are hidden.",
            "example": false
          }
        },
        "description": "This object represents data elements to set custom coverage excluding hiding titles."
      },
      "packagesPartialSelectedPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "isFullPackage": {
            "type": "boolean",
            "description": "Indicates if the package is partially selected.",
            "example": false
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          }
        },
        "description": "This object represents all of the data elements for customization combined."
      },
      "unselectPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": false
          }
        },
        "description": "This object represents data elements that describe the payload to unselect an entire package or package-title."
      },
      "unselectPayloadTitle": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": false
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          }
        },
        "description": "This object represents data elements that describe the payload to unselect a package-title."
      },
      "unhidePackageTitlePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if titles are hidden.",
            "example": false
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          }
        },
        "description": "This object represents the payload to un-hide a package-title."
      },
      "titlesCombinedPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if titles are hidden.",
            "example": false
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "2009 - 2009"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          }
        },
        "description": "This object represents data elements to set custom coverage, coverage statement and custom embargo."
      },
      "setCustomCoveragePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "2009 - 2009"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          }
        },
        "description": "This object represents data elements to set custom coverage, coverage statement and custom embargo."
      },
      "titlesPackageId": {
        "required": [
          "totalResults"
        ],
        "type": "object",
        "properties": {
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/titlePackageId"
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found.",
            "example": 5
          }
        },
        "description": "List of titles regardless of package from EPKB and the total number of results found."
      },
      "titlePackageId": {
        "required": [
          "titleId",
          "titleName"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "alternateTitleList": {
            "type": "array",
            "description": "Alternate Titles",
            "items": {
              "$ref": "#/components/schemas/alternateTitle"
            }
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "www.ebsco.com"
          },
          "identifiersList": {
            "type": "array",
            "description": "Identifiers",
            "items": {
              "$ref": "#/components/schemas/identifier"
            }
          },
          "subjectsList": {
            "type": "array",
            "description": "Subjects",
            "items": {
              "$ref": "#/components/schemas/subj"
            }
          },
          "isTitleCustom": {
            "type": "boolean",
            "description": "Is this a custom title owned by the customer.",
            "example": true
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "customerResourcesList": {
            "type": "array",
            "description": "Customer Resources List",
            "items": {
              "$ref": "#/components/schemas/customerResourcesPackageId"
            }
          }
        },
        "description": "This object represents data elements that describe a title."
      },
      "alternateTitle": {
        "type": "object",
        "properties": {
          "alternateTitle": {
            "type": "string",
            "description": "Alternate Title",
            "example": "Boston Coll Law Rev"
          },
          "titleType": {
            "type": "string",
            "description": "Title Type. Valid values are Variant, Alternate, Proper, Former, Translated or Abbreviated.",
            "example": "Abbreviated"
          }
        }
      },
      "customerResourcesPackageId": {
        "required": [
          "packageType",
          "titleId"
        ],
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 1157191
          },
          "packageId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the package.  In EPKB, this is 'PkgID'.",
            "example": 3964
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package. In EPKB, this is 'PkgName'.",
            "example": "EBSCO Business Basics"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyURL"
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.  In EPKB, this is 'VendorID'.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.  In EPKB, this is the 'VendorName'.",
            "example": "Bureau van Dijk Electronic Publishing"
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Is the Package Custom.",
            "example": false
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": false
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID",
            "example": 123456789
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Managed Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "managedEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "visibilityData": {
            "$ref": "#/components/schemas/visibilityInfo"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "string1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "string2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "string3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "string4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "string5"
          },
          "selectedBy": {
            "type": "string",
            "description": "The resource last selected by EBSCO or the customer.",
            "example": ""
          }
        },
        "description": "This object represents data elements that describe customer resources information."
      },
      "visibilityInfo": {
        "required": [
          "isHidden"
        ],
        "type": "object",
        "properties": {
          "isHidden": {
            "type": "boolean",
            "description": "Is Hidden",
            "example": true
          },
          "reason": {
            "type": "string",
            "description": "Reason",
            "example": "Hidden by Customer"
          }
        },
        "description": "Visibility"
      },
      "customPackagePayload": {
        "type": "object",
        "properties": {
          "packageName": {
            "type": "string",
            "description": "Package Name",
            "example": "Library Package 1"
          },
          "contentType": {
            "type": "integer",
            "description": "Content Type.  Valid values are 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "example": 3
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "customDescription": {
            "type": "string",
            "description": "A description of the custom package",
            "example": "This custom package focuses on medical science"
          },
          "customDisplayName": {
            "type": "string",
            "description": "A display name for the custom package",
            "example": "Medical Science Package"
          },
          "url": {
            "type": "string",
            "description": "A url for the custom the package",
            "example": "www.yourlibrary.com/medicalsciencepackage"
          },
          "customAltNames": {
            "$ref": "#/components/schemas/altName"
          },
          "subjects": {
            "type": "array",
            "description": "List of subject Ids to associate with the package",
            "items": {
              "type": "integer",
              "example": 35408
            }
          },
          "packageFreeAccess": {
            "type": "string",
            "description": "Indicates if the package is freely accessible.",
            "example": true
          }
        },
        "description": "Custom Package Payload"
      },
      "customPackageResponse": {
        "type": "object",
        "properties": {
          "packageId": {
            "type": "integer",
            "description": "Package ID",
            "example": 2035215
          }
        },
        "description": "Custom Package ID"
      },
      "identifierCustom": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Identifier Value",
            "example": "1234"
          },
          "subtype": {
            "type": "integer",
            "description": "Subtype for the identifier.  Valid values are 1 for Print and 2 for Online.",
            "example": 1
          },
          "type": {
            "type": "integer",
            "description": "Type of identifier.  Valid values are 0 for ISSN and 1 for ISBN.",
            "example": 1
          }
        },
        "description": "Identifier"
      },
      "contributorID": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of contributor. Valid values are Author, Illustrator, and Editor.",
            "example": "Editor"
          },
          "contributor": {
            "type": "string",
            "description": "Contributor Name",
            "example": "Jon Doe"
          }
        },
        "description": "Contributor ID"
      },
      "customTitlePayload": {
        "required": [
          "description",
          "pubType",
          "publisherName",
          "titleName"
        ],
        "type": "object",
        "properties": {
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "identifiersList": {
            "type": "array",
            "description": "Identifiers",
            "items": {
              "$ref": "#/components/schemas/identifierCustom"
            }
          },
          "contributorsList": {
            "type": "array",
            "description": "Contributor ID List",
            "items": {
              "$ref": "#/components/schemas/contributorID"
            }
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          }
        },
        "description": "Custom Title Payload"
      },
      "customTitleResponse": {
        "type": "object",
        "properties": {
          "titleId": {
            "type": "integer",
            "description": "Title ID",
            "example": 2035215
          }
        },
        "description": "Custom Title ID"
      },
      "customTitleUpdatePayload": {
        "required": [
          "isSelected",
          "pubType",
          "titleName"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Field to indicate if title is selected.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          }
        },
        "description": "Custom Title Payload"
      },
      "holdingsStatus": {
        "required": [
          "created",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Status. Valid values are In Progress, Completed, None or Failed.",
            "example": "Completed"
          },
          "created": {
            "type": "string",
            "description": "Date Time Stamp",
            "example": "1999-12-31T23:59:59.000Z"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total Count.  Note: Only available for Completed.",
            "example": 123
          }
        },
        "description": "Holdings Status"
      },
      "holding": {
        "required": [
          "access_type",
          "coverage_depth",
          "date_first_issue_online",
          "date_last_issue_online",
          "date_monograph_published_online",
          "date_monograph_published_print",
          "embargo_info",
          "first_author",
          "first_editor",
          "monograph_edition",
          "monograph_volume",
          "notes",
          "num_first_issue_online",
          "num_first_vol_online",
          "num_last_issue_online",
          "num_last_vol_online",
          "online_identifier",
          "package_id",
          "package_name",
          "parent_publication_title_id",
          "preceding_publication_title_id",
          "print_identifier",
          "publication_title",
          "publication_type",
          "publisher_name",
          "resource_type",
          "title_id",
          "title_url",
          "vendor_id",
          "vendor_name"
        ],
        "type": "object",
        "properties": {
          "publication_title": {
            "type": "string",
            "description": "Title of the serial or monograph being represented.  Conference proceedings serial title should be entered as a serial title, while conference proceeding volume titles should be entered as a monograph title.",
            "example": "Chronicle of Higher Education"
          },
          "print_identifier": {
            "type": "string",
            "description": "ISSN or ISBN of the print version of the work.  Note: If the item is a book and has both an ISBN and ISSN, use ISBN.",
            "example": "0009-5982"
          },
          "online_identifier": {
            "type": "string",
            "description": "ISSN or ISBN of the online version of work. Note:  If item is a book and has both an ISBN and ISSN, use the ISBN.",
            "example": "1931-1362"
          },
          "date_first_issue_online": {
            "type": "string",
            "description": "The publication date of the earliest serial issue available online in the format of yyyy-mm-dd. Applicable only to serials.",
            "example": "1959-01-01T00:00:00.000Z"
          },
          "num_first_vol_online": {
            "type": "string",
            "description": "The volume number of the earliest serial issue available online. Applicable only to serials.",
            "example": "1"
          },
          "num_first_issue_online": {
            "type": "string",
            "description": "The issue number of the earliest serial issue available online. Applicable only to serials.",
            "example": "1"
          },
          "date_last_issue_online": {
            "type": "string",
            "description": "Date of the latest serial issue available online. Leave blank if coverage is to present. Applicable only to serials.",
            "example": "1975-12-31T00:00:00.000Z"
          },
          "num_last_vol_online": {
            "type": "string",
            "description": "The volume number of the latest serial issue available online. Leave blank if coverage is to present. Applicable only to serials.",
            "example": "23"
          },
          "num_last_issue_online": {
            "type": "string",
            "description": "The issue number of the latest serial issue available online. Leave blank if coverage is to present. Applicable only to serials.",
            "example": "19"
          },
          "title_url": {
            "type": "string",
            "description": "Title-level URL. Applicable to both monographs and serials. For conference proceeding, the title_url for the series and the title_url for each volume should be different.",
            "example": "http://chronicle.com/section/Archives/39/"
          },
          "first_author": {
            "type": "string",
            "description": "First author of the monograph. Applicable only to monographs.",
            "example": "Benson"
          },
          "title_id": {
            "type": "string",
            "description": "The unique identifier for the title. This is the report provider's proprietary identifier.",
            "example": "17482"
          },
          "embargo_info": {
            "type": "string",
            "description": "Embargo information as a coded string following rules in section 6.6.14 of the KBART recommended practice (i.e. 'P1Y' means an embargo is period of 1 year.)",
            "example": "P14D"
          },
          "coverage_depth": {
            "type": "string",
            "description": "Coverage depth is defined in 6.6.15 of the KBART recommended practice. Multiple coverage depths can be specified with a semicolon to delimit values.",
            "example": "fulltext"
          },
          "notes": {
            "type": "string",
            "description": "Free text field to describe the specifics of the coverage policy.",
            "example": "Excludes book reviews."
          },
          "publisher_name": {
            "type": "string",
            "description": "Name of the publisher of the work. Not to be confused with the name of the hosting platform.",
            "example": "Ubiquity Press"
          },
          "publication_type": {
            "type": "string",
            "description": "Serial or Monograph. Use 'serial' for journals, book series and conference proceeding series. Use 'monograph' for books and individual conference proceeding volumes.",
            "example": "serial"
          },
          "date_monograph_published_print": {
            "type": "string",
            "description": "Date the monograph was first published in print. Applies to monographs only.",
            "example": "2013-05-15T00:00:00.000Z"
          },
          "date_monograph_published_online": {
            "type": "string",
            "description": "Date the monograph was first published online. Applies to monographs only.",
            "example": "2013-05-24T00:00:00.000Z"
          },
          "monograph_volume": {
            "type": "string",
            "description": "Number of the particular volume of the monograph. Applicable to ebooks and conference proceedings. For conference proceedings, use the volume within the conference proceedings series.",
            "example": "3"
          },
          "monograph_edition": {
            "type": "string",
            "description": "Edition of the monograph.",
            "example": "1"
          },
          "first_editor": {
            "type": "string",
            "description": "First editor. Applicable to monographs only.",
            "example": "Took"
          },
          "parent_publication_title_id": {
            "type": "string",
            "description": "Title identifier of the parent publication. For a conference proceeding, this would be the title_id of the overall conference proceeding series.",
            "example": "2041"
          },
          "preceding_publication_title_id": {
            "type": "string",
            "description": "The title identifier of any preceding publication title for serials and conference proceeding serials.  The publisher's proprietary identifier should be used where it exists."
          },
          "access_type": {
            "type": "string",
            "description": "Indicates if the content in the journal is F-Free, P-Paid, H-Hybrid, PF-Paid then Free after embargo period.  The default is P-Paid.",
            "example": "P"
          },
          "package_name": {
            "type": "string",
            "description": "Name of the package or full text database this title is part of. This should match the name of the same package as it appears in the KBARTManifest.",
            "example": "Applied Science & Technology Source"
          },
          "package_id": {
            "type": "string",
            "description": "The provider's identifier for the package or full text database this title is part of. This should match the package_id of the same package as it appears in the KBARTManifest.",
            "example": "6605"
          },
          "vendor_name": {
            "type": "string",
            "description": "Provider Name",
            "example": "ABC-CLIO"
          },
          "vendor_id": {
            "type": "integer",
            "description": "EBSCO KB's unique identifier for the provider.",
            "example": 583
          },
          "resource_type": {
            "type": "string",
            "description": "EBSCO's Resource_Type in textual form.",
            "example": "Book"
          }
        },
        "description": "Holding"
      },
      "holdingsDetails": {
        "required": [
          "format",
          "holdings",
          "offset"
        ],
        "type": "object",
        "properties": {
          "offset": {
            "type": "integer",
            "description": "Page Offset",
            "example": 1
          },
          "format": {
            "type": "string",
            "description": "Format",
            "example": "KBART2"
          },
          "holdings": {
            "type": "array",
            "description": "Holdings List",
            "items": {
              "$ref": "#/components/schemas/holding"
            }
          }
        },
        "description": "Holdings Details"
      },
      "altName": {
        "type": "object",
        "description": "Alternate names and their corresponding ids for a package, can be managed or custom.",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The id of the managed alternate name of the package.",
            "example": "1"
          },
          "altName": {
            "type": "string",
            "description": "The alternate name of the package.",
            "example": "Managed Alternate Name"
          }
        },
        "required": [
          "id",
          "altName"
        ]
      },
      "proxyInfoIn": {
        "required": [
          "id",
          "inherited",
          "proxiedUrl"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proxy ID",
            "example": ""
          },
          "inherited": {
            "type": "boolean",
            "description": "Field to indicate if the proxy is inherited.",
            "example": true
          },
          "proxiedUrl": {
            "type": "string",
            "description": "The proxied URL of the package.",
            "example": ""
          }
        },
        "description": "Proxy"
      },
      "proxyWithURL": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proxy ID",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "Proxy Name",
            "example": "EZ_proxy"
          },
          "urlMask": {
            "type": "string",
            "description": "URL mask",
            "example": "url"
          }
        },
        "description": "Proxy"
      },
      "proxyURL": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proxy ID",
            "example": "guest"
          },
          "name": {
            "type": "string",
            "description": "Proxy Name",
            "example": "EZ_proxy"
          },
          "proxiedUrl": {
            "type": "string",
            "description": "The URL to the provider's resource with the addition of the customer's proxy information. This enables requests to be routed through the customer's proxy server before reaching the provider's resource. The proxiedUrl property is only present in the response when the customer has assigned a proxy server.",
            "example": "http://ezproxy.myinstitute.edu/Login?url=http://search.ebscohost.com/Login.aspx?outhtype=ip,uid&profile=ehost&defaultdb=27h"
          }
        },
        "description": "Proxy"
      },
      "proxyInfo": {
        "required": [
          "id",
          "inherited"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proxy ID",
            "example": "EZ_proxy"
          },
          "inherited": {
            "type": "boolean",
            "description": "Field to indicate if the proxy is inherited.",
            "example": false
          }
        },
        "description": "Proxy"
      },
      "updateVendorProxyPayload": {
        "required": [
          "proxy",
          "vendorToken"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyDetails"
          },
          "vendorToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "JSON payload to update a vendor with a proxy."
      },
      "updateVendorInheritedProxyPayload": {
        "required": [
          "proxy"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          }
        },
        "description": "JSON payload to update a vendor with an inherited proxy."
      },
      "updateVendorPayload": {
        "required": [
          "proxy",
          "vendorToken"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "vendorToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "JSON payload to update a vendor."
      },
      "updateVendorNonInheritedProxyPayload": {
        "required": [
          "proxy",
          "vendorToken"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "vendorToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "JSON payload to update a vendor with an non-inherited proxy."
      },
      "tokenInfo": {
        "required": [
          "factName"
        ],
        "type": "object",
        "properties": {
          "factName": {
            "type": "string",
            "description": "Tokens are variables in content URLs that identify the customer. The token is text within the URL that needs to be replaced with an institute-specific value.",
            "example": "galesiteid"
          },
          "helpText": {
            "type": "string",
            "description": "Help Text",
            "example": "<ul><li>Enter your Gale<sup></sup> site ID in the space provided below. The site ID may contain a combination of alpha/numeric characters, varying in length. <blockquote><p> Example: The site ID immediately follows /itweb/ in a URL. The site ID in the following URL is â€¦â€¦â€¦â€¦â€¦.</ul>"
          },
          "prompt": {
            "type": "string",
            "description": "Prompt",
            "example": "/itweb/"
          },
          "value": {
            "type": "string",
            "description": "Value",
            "example": "1234567"
          }
        },
        "description": "Token Information"
      },
      "proxyDetails": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Proxy ID",
            "example": "EZ_proxy"
          }
        },
        "description": "Proxy ID"
      },
      "tokenDetails": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "description": "Token Value",
            "example": "myValue"
          }
        },
        "description": "Token"
      },
      "setProxyPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyDetails"
          }
        },
        "description": "This object represents data elements to update a proxy value for a title."
      },
      "setProxyTwoPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          }
        },
        "description": "This object represents data elements to update a proxy value for a title."
      },
      "setTitleinPackagePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          }
        },
        "description": "This object represents data elements to update a title within a package."
      },
      "setProxyInPayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account.",
            "example": true
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "custom-title-74"
          },
          "pubType": {
            "type": "string",
            "description": "Type of publication. Valid values are journal, newsletter, report, proceedings, website, newspaper, unspecified, book, bookseries, database, thesisdissertation, streamingaudio, streamingvideo, and audiobook.",
            "example": "Book"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO Publishing"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Field to indicate if title is peer reviewed.",
            "example": false
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1"
          },
          "description": {
            "type": "string",
            "description": "Description",
            "example": "description-test"
          },
          "url": {
            "type": "string",
            "description": "URL",
            "example": "http://www.ebsco.com"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/embargoPeriod"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "String1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "String2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "String3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "String4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "String5"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          }
        },
        "description": "This object represents data elements to update a proxy value for a title."
      },
      "setPackagePayload": {
        "type": "object",
        "description": "This object represents data elements that describe the payload to update values for a package.",
        "properties": {
          "packageName": {
            "type": "string",
            "description": "Package Name",
            "example": "Library Package 1"
          },
          "contentType": {
            "type": "integer",
            "description": "Content Type. Valid values are 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "example": 3
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "customDescription": {
            "type": "string",
            "description": "Field to set the custom description of the package.",
            "example": "Custom description for package"
          },
          "url": {
            "type": "string",
            "description": "The url of the package.",
            "example": "https://link.gale.com/apps/IFME?u=[[galesiteid]]"
          },
          "isFullPackage": {
            "type": "boolean",
            "description": "Field to indicate if a full package.",
            "example": false
          },
          "allowEbscoToAddTitles": {
            "type": "boolean",
            "description": "Indicates if EBSCO is allowed to add titles.  If the package type is custom, then allowEbscoToAddTitles will always be set to false.",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenDetails"
          },
          "customAltNames": {
            "type": "array",
            "minItems": 0,
            "maxItems": 10,
            "description": "Set a list of custom alternate names for the package",
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "customDisplayName": {
            "type": "string",
            "description": "Set the custom display name for the package"
          }
        },
        "required": [
          "isSelected"
        ]
      },
      "setPackagePayloadV1": {
        "type": "object",
        "description": "This object represents data elements that describe the payload to update values for a package.",
        "properties": {
          "packageName": {
            "type": "string",
            "description": "Package Name",
            "example": "Library Package 1"
          },
          "contentType": {
            "type": "integer",
            "description": "Content Type. Valid values are 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "example": 3
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "visibility": {
            "type": "array",
            "description": "Visibility details for pf,ftf and marc",
            "items": {
              "$ref": "#/components/schemas/VisibilityDataV1"
            }
          },
          "customDescription": {
            "type": "string",
            "description": "Field to set the custom description of the package.",
            "example": "Custom description for package"
          },
          "url": {
            "type": "string",
            "description": "The url of the package.",
            "example": "https://link.gale.com/apps/IFME?u=[[galesiteid]]"
          },
          "isFullPackage": {
            "type": "boolean",
            "description": "Field to indicate if a full package.",
            "example": false
          },
          "allowEbscoToAddTitles": {
            "type": "boolean",
            "description": "Indicates if EBSCO is allowed to add titles.  If the package type is custom, then allowEbscoToAddTitles will always be set to false.",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenDetails"
          },
          "customAltNames": {
            "type": "array",
            "minItems": 0,
            "maxItems": 10,
            "description": "Set a list of custom alternate names for the package",
            "items": {
              "$ref": "#/components/schemas/altName"
            }
          },
          "customDisplayName": {
            "type": "string",
            "description": "Set the custom display name for the package"
          },
          "subjectAssociations": {
            "type": "array",
            "description": "The list of subjects to associate with the package.",
            "items": {
              "$ref": "#/components/schemas/UpdateSubjectAssociation"
            }
          },
          "packageFreeAccess": {
            "type": "boolean",
            "description": "Indicates if the package is freely available.",
            "example": true
          }
        },
        "required": [
          "isSelected"
        ]
      },
      "setManagedPackagePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "allowEbscoToAddTitles": {
            "type": "boolean",
            "description": "Indicates if EBSCO is allowed to add titles.  If the package type is custom, then allowEbscoToAddTitles will always be set to false.",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "This object represents data elements that describe the payload to update values for a managed package."
      },
      "setCustomPackagePayload": {
        "required": [
          "isSelected"
        ],
        "type": "object",
        "properties": {
          "packageName": {
            "type": "string",
            "description": "Package Name",
            "example": "Library Package 1"
          },
          "contentType": {
            "type": "integer",
            "description": "Content Type. Valid values are 0 for all, 1 for aggregated full text, 2 for abstract and index, 3 for ebook, 4 for ejournal, 5 for print, 6 for unknown, 7 for online reference, 8 for streaming media or 9 for mixed content.",
            "example": 3
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "isHidden": {
            "type": "boolean",
            "description": "Field to indicate if title is hidden.",
            "example": false
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfo"
          }
        },
        "description": "This object represents data elements that describe the payload to update values for a custom package."
      },
      "updatePackageProxyPayload": {
        "required": [
          "packageToken",
          "proxy"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyDetails"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "JSON payload to update a package with a proxy."
      },
      "updatePackageInheritedProxyPayload": {
        "required": [
          "packageToken",
          "proxy"
        ],
        "type": "object",
        "properties": {
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "proxy": {
            "$ref": "#/components/schemas/proxyInfoIn"
          },
          "packageToken": {
            "$ref": "#/components/schemas/tokenDetails"
          }
        },
        "description": "JSON payload to update a package with an inherited proxy."
      },
      "labelid": {
        "required": [
          "displayLabel",
          "displayOnFullTextFinder",
          "displayOnPublicationFinder",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Display Label ID",
            "example": "1"
          },
          "displayLabel": {
            "type": "string",
            "description": "Custom field display Label Name",
            "example": "this label is UDF1"
          },
          "displayOnFullTextFinder": {
            "type": "boolean",
            "description": "Indicates if displayed on Full Text Finder.",
            "example": false
          },
          "displayOnPublicationFinder": {
            "type": "boolean",
            "description": "Indicates if displayed on Publication Finder.",
            "example": true
          }
        },
        "description": "Custom Label"
      },
      "label": {
        "required": [
          "displayLabel",
          "displayOnFullTextFinder",
          "displayOnPublicationFinder",
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Display Label ID",
            "example": 1
          },
          "displayLabel": {
            "type": "string",
            "description": "Custom field display Label Name",
            "example": "this label is UDF1"
          },
          "displayOnFullTextFinder": {
            "type": "boolean",
            "description": "Indicates if displayed on Full Text Finder.",
            "example": false
          },
          "displayOnPublicationFinder": {
            "type": "boolean",
            "description": "Indicates if displayed on Publication Finder.",
            "example": true
          }
        },
        "description": "Custom Label"
      },
      "customLabels": {
        "required": [
          "proxy"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyDetails"
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/labelid"
            }
          }
        },
        "description": "List of all custom labels and root proxy."
      },
      "customLabelsProxy": {
        "required": [
          "proxy"
        ],
        "type": "object",
        "properties": {
          "proxy": {
            "$ref": "#/components/schemas/proxyDetails"
          },
          "vendorId": {
            "type": "string",
            "description": "Vendor ID",
            "example": "19"
          },
          "ftfTokens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomerToken"
            }
          },
          "labels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/label"
            }
          }
        },
        "description": "List of all custom labels and root proxy."
      },
      "CustomerToken": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "description": "Key",
            "example": "CCC.Password"
          },
          "token": {
            "type": "string",
            "description": "Token",
            "example": "1"
          }
        }
      },
      "proxyList": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/proxyWithURL"
        },
        "description": "List of all customer proxies."
      },
      "StoredOrderRetrieved": {
        "title": "StoredOrderRetrieved",
        "type": "object",
        "properties": {
          "accessModel": {
            "type": "string",
            "example": "AC",
            "description": "Access model purchased in the order."
          },
          "coverageEndDate": {
            "type": "string",
            "example": "2021-01-01",
            "description": "Coverage End Date"
          },
          "coverageStartDate": {
            "type": "string",
            "example": "2020-01-01",
            "description": "Coverage Start Date"
          },
          "custID": {
            "type": "string",
            "example": "n223344",
            "description": "Customer ID"
          },
          "internalOrderID": {
            "type": "integer",
            "format": "int64",
            "example": 100085012561,
            "description": "Order data record identifier."
          },
          "orderDate": {
            "type": "string",
            "example": "2020-07-01",
            "description": "Date the order was received."
          },
          "orderSource": {
            "type": "string",
            "example": "GOBI",
            "description": "Order Source"
          },
          "orderType": {
            "type": "string",
            "example": "Title",
            "description": "Type of Order.  Valid values are Title or Package.",
            "enum": [
              "Title",
              "Package"
            ]
          },
          "recordDescription": {
            "type": "string",
            "example": "Journal of Combinatorial Optimization",
            "description": "Description of the order."
          },
          "sourceItemID": {
            "type": "string",
            "example": "474228533",
            "description": "Source Item ID"
          },
          "sourceOrderNumber": {
            "type": "string",
            "example": "M8239631",
            "description": "Order identifier from the source (GOBI or SSD)."
          }
        }
      },
      "OrderEventRecord": {
        "title": "OrderEventRecord",
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "example": "Journal Gold Package",
            "description": "Order Description"
          },
          "eventAction": {
            "type": "string",
            "example": "Order mapped",
            "description": "Action resulting from the event.",
            "enum": [
              "SELECTED",
              "SELECTED AND SET TO SHOW",
              "SET TO SHOW",
              "DESELECTED",
              "IGNORED",
              "HIDDEN",
              "PARTIALLY DESELECTED",
              "ORDER MAPPED",
              "ORDER UNMAPPED",
              "COVERAGE UPDATED"
            ]
          },
          "eventType": {
            "type": "string",
            "example": "MAP",
            "description": "Event Type",
            "enum": [
              "SELECT",
              "HIDE",
              "DESELECT",
              "MAP",
              "UN_MAP",
              "COVERAGE_CHANGE"
            ]
          },
          "orderId": {
            "type": "string",
            "example": "M9490000",
            "description": "Order ID"
          },
          "orderSource": {
            "type": "string",
            "example": "SSD",
            "description": "Indicates the order source.  Valid values are GOBI or SSD.",
            "enum": [
              "GOBI",
              "SSD"
            ]
          },
          "reason": {
            "type": "string",
            "example": "Order mapped",
            "description": "Reason for the event action."
          },
          "timestamp": {
            "type": "string",
            "example": "01/06/2022 19:00:23",
            "description": "Date and time of the event."
          }
        }
      },
      "Export": {
        "title": "Export",
        "type": "object",
        "description": "Export",
        "x-examples": {},
        "properties": {
          "costDownload": {
            "$ref": "#/components/schemas/CostDownload"
          },
          "created": {
            "type": "string",
            "description": "Date export was created",
            "format": "date-time",
            "example": "2023-02-01T22:32:33.653Z",
            "readOnly": true
          },
          "custId": {
            "type": "string",
            "description": "Customer Identifier",
            "example": "ns334455",
            "readOnly": true
          },
          "customerHoldingsCounts": {
            "$ref": "#/components/schemas/CustomerHoldingsCounts"
          },
          "fileName": {
            "type": "string",
            "description": "The filename of the export when downloaded.",
            "example": "FileName"
          },
          "format": {
            "type": "string",
            "description": "Format type.  Valid values are TSV, CSV or XLSX.",
            "example": "TSV",
            "enum": [
              "TSV",
              "CSV",
              "XLSX"
            ]
          },
          "holdingsEvent": {
            "$ref": "#/components/schemas/HoldingsEvent"
          },
          "id": {
            "type": "string",
            "description": "A unique export identifier generated server-side to identify a particular export.",
            "example": "9cc047c6-605f-40f5-be64-7f638124bcfd",
            "readOnly": true
          },
          "links": {
            "type": "array",
            "description": "Links associated with the export request, most commonly the link the download the export file.",
            "items": {
              "$ref": "#/components/schemas/ExportLinks"
            },
            "readOnly": true
          },
          "managedOrCustom": {
            "type": "string",
            "description": "Limiter to managed holdings, custom holdings or both. (MANAGED_AND_CUSTOM, MANAGED, CUSTOM)",
            "example": "MANAGED_AND_CUSTOM",
            "enum": [
              "MANAGED_AND_CUSTOM",
              "MANAGED",
              "CUSTOM"
            ]
          },
          "noteIds": {
            "type": "array",
            "description": "Export file note id.",
            "uniqueItems": false,
            "items": {
              "type": "string",
              "example": "1123"
            }
          },
          "orderedThroughEbsco": {
            "type": "boolean",
            "example": false,
            "description": "Limiter to include only records associated with an EBSCO order."
          },
          "packageContentTypes": {
            "type": "array",
            "description": "List of package content types.",
            "items": {
              "type": "string",
              "description": "Package Content Type",
              "enum": [
                "AGGREGATEDFULLTEXT",
                "ABSTRACTANDINDEX",
                "EBOOK",
                "EJOURNAL",
                "PRINT",
                "UNKNOWN",
                "ONE_TO_ONE",
                "STREAMING_MEDIA",
                "MIXED_CONTENT"
              ],
              "example": "PRINT"
            }
          },
          "packageIds": {
            "type": "array",
            "description": "List of package ids used as limiters in the export file.",
            "items": {
              "type": "string",
              "description": "Package ID",
              "example": "43"
            }
          },
          "resourceTypes": {
            "type": "array",
            "description": "List of resource types used as limiters for records in the export file. (JOURNALS, NEWSLETTERS, REPORTS, PROCEEDINGS, WEB_SITES, NEWSPAPER, UNSPECIFIED, BOOK,BOOK_SERIES, DATABASE, THESIS_DISSERTATION, STREAMING_AUDIO, STREAMING_VIDEO, AUDIO_BOOK)",
            "items": {
              "type": "string",
              "description": "Resource Type",
              "enum": [
                "JOURNALS",
                "NEWSLETTERS",
                "REPORTS",
                "PROCEEDINGS",
                "WEB_SITES",
                "NEWSPAPER",
                "UNSPECIFIED",
                "BOOK",
                "BOOK_SERIES",
                "DATABASE",
                "THESIS_DISSERTATION",
                "STREAMING_AUDIO",
                "STREAMING_VIDEO",
                "AUDIO_BOOK"
              ],
              "example": "BOOK"
            }
          },
          "size": {
            "type": "integer",
            "description": "File size in bytes",
            "format": "int64",
            "example": 125,
            "readOnly": true
          },
          "status": {
            "type": "string",
            "description": "Status Allowed Values (QUEUED, INPROGRESS, COMPLETED)",
            "example": "QUEUED",
            "enum": [
              "QUEUED",
              "INPROGRESS",
              "COMPLETED"
            ],
            "readOnly": true
          },
          "totalCount": {
            "type": "integer",
            "description": "Total Count",
            "format": "int32",
            "example": 12,
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "File format of the holdings snapshot. Allowed values (STANDARD, KBART2, HoldingsEvent, COST)",
            "example": "KBART2",
            "enum": [
              "STANDARD",
              "KBART2",
              "HoldingsEvent",
              "COST"
            ]
          }
        }
      },
      "CostDownload": {
        "title": "CostDownload",
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "description": "Currency applied to the records for the cost download.",
            "example": "USD"
          },
          "fromFiscalYear": {
            "type": "integer",
            "format": "int32",
            "description": "Start of the fiscal year.",
            "example": 2020
          },
          "toFiscalYear": {
            "type": "integer",
            "format": "int32",
            "description": "End of the fiscal year.",
            "example": 2022
          }
        },
        "description": "Cost Download Request Parameters"
      },
      "CustomerHoldingsCounts": {
        "type": "object",
        "title": "CustomerHoldingsCounts",
        "description": "Customer Holdings Counts",
        "properties": {
          "customResourceCount": {
            "type": "string",
            "description": "Custom Resource Count",
            "example": "10",
            "readOnly": true
          },
          "managedResourceCount": {
            "type": "string",
            "description": "Managed Resource Count",
            "example": "3002",
            "readOnly": true
          },
          "totalCustomPackageCount": {
            "type": "string",
            "description": "Total Custom Package Count",
            "example": "24",
            "readOnly": true
          },
          "totalManagedPackageCount": {
            "type": "string",
            "description": "Total Managed Package Count",
            "example": "5",
            "readOnly": true
          },
          "totalResourceCount": {
            "type": "string",
            "description": "Total Resource Count",
            "example": "4672",
            "readOnly": true
          },
          "uniqueCustomResourceCount": {
            "type": "string",
            "description": "Unique Custom Resource Count",
            "example": "6",
            "readOnly": true
          },
          "uniqueManagedResourceCount": {
            "type": "string",
            "description": "Unique Managed Resource Count",
            "example": "3",
            "readOnly": true
          },
          "uniqueResourceCount": {
            "type": "string",
            "description": "Unique Resource Count",
            "example": "4",
            "readOnly": true
          }
        },
        "readOnly": true
      },
      "HoldingsEvent": {
        "title": "HoldingsEvent",
        "type": "object",
        "description": "Holdings Event Request Parameters",
        "properties": {
          "endDate": {
            "type": "string",
            "description": "Holdings Event End Date",
            "example": "09-01-2022"
          },
          "eventActions": {
            "type": "array",
            "description": "Event Actions.  Valid value is IGNORED.",
            "example": "[\"IGNORED\"]",
            "items": {
              "type": "string",
              "enum": [
                "IGNORED"
              ],
              "example": "IGNORED"
            }
          },
          "eventSource": {
            "type": "array",
            "description": "Event Source.  Valid values are GOBI or SSD.",
            "example": "[\"SSD\"]",
            "items": {
              "type": "string",
              "enum": [
                "GOBI",
                "SSD"
              ],
              "example": "GOBI"
            }
          },
          "startDate": {
            "type": "string",
            "description": "Holdings Event Start Date",
            "example": "08-31-2022"
          }
        }
      },
      "ExportLinks": {
        "type": "object",
        "title": "ExportLinks",
        "description": "Link associated with the export request, most commonly the link the download the export file.",
        "properties": {
          "href": {
            "type": "string",
            "description": "A URI template used to determine the target URL of the related resource.",
            "example": "https://s3amazonaws.com/link"
          },
          "rel": {
            "type": "string",
            "description": "Indicates the name of the relation relative to the target resource.",
            "example": "download"
          }
        },
        "readOnly": true
      },
      "ResourceId": {
        "title": "ResourceId",
        "type": "object",
        "description": "Identifier for a title assigned by GKB database upon entry",
        "properties": {
          "resourceId": {
            "type": "integer",
            "maximum": 100000000,
            "description": "Identifier for a title assigned by GKB database upon entry"
          }
        }
      },
      "Kbid": {
        "title": "Kbid",
        "type": "object",
        "description": "Identifier for a title assigned by the EPKB database upon entry",
        "properties": {
          "kbid": {
            "type": "integer",
            "maximum": 100000000,
            "description": "Identifier for a title assigned by the EPKB database upon entry"
          }
        }
      },
      "RelatedTitle": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Kbid"
          },
          {
            "$ref": "#/components/schemas/ResourceId"
          },
          {
            "type": "object",
            "description": "Title name",
            "properties": {
              "name": {
                "type": "string",
                "description": "Title name"
              }
            }
          }
        ],
        "description": "Includes the resourceId, kbid, and name of the given title"
      },
      "RelationshipRecord": {
        "title": "RelationshipRecord",
        "type": "object",
        "description": "Represents the fields needed to describe a relationship between two titles",
        "properties": {
          "resourceRelationshipId": {
            "type": "integer",
            "description": "Identifier for the relationship assigned in GKB"
          },
          "source": {
            "$ref": "#/components/schemas/RelatedTitle"
          },
          "target": {
            "$ref": "#/components/schemas/RelatedTitle"
          },
          "type": {
            "type": "string",
            "enum": [
              "ABSORBED_BY",
              "CONTINUED_BY",
              "CONTINUED_IN_PART_BY",
              "MERGED_WITH_TO_FORM",
              "PARENT_OF",
              "SPLIT_INTO"
            ],
            "description": "Resource relationship type as determined by the available options in the ResourceRelationshipTypes table in GKB"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Date the relationship was created"
          }
        }
      },
      "TitleRelationship": {
        "allOf": [
          {
            "type": "object",
            "description": "Array of found title relationships within one degree of the given title",
            "properties": {
              "titleRelationships": {
                "type": "array",
                "description": "Array of found title relationships within one degree of the given title",
                "items": {
                  "$ref": "#/components/schemas/RelationshipRecord"
                }
              }
            }
          },
          {
            "$ref": "#/components/schemas/Pagination"
          }
        ],
        "description": "Represents an array of all found relationships for a given title and the total number of relationships in the array"
      },
      "Pagination": {
        "title": "Pagination",
        "type": "object",
        "description": "Represents the number of results returned in the response",
        "properties": {
          "total": {
            "type": "integer",
            "description": "Represents the number of results returned in the response"
          }
        }
      },
      "TitlesResponseV2": {
        "title": "TitlesResponseV2",
        "type": "object",
        "properties": {
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocationV2"
            }
          }
        }
      },
      "LocationV2": {
        "title": "LocationV2",
        "type": "object",
        "properties": {
          "alternateTitleList": {
            "type": "array",
            "description": "A list of alternate titles",
            "items": {
              "$ref": "#/components/schemas/LocalAlternateTitle"
            }
          },
          "contributorsList": {
            "type": "array",
            "description": "A list of relevant contributors",
            "items": {
              "$ref": "#/components/schemas/LocalContributor"
            }
          },
          "coverageStatement": {
            "type": "string",
            "description": "Coverage Statement",
            "example": "Issues on or after 6/1/1992"
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/CoverageList"
            }
          },
          "customCoverageOwnership": {
            "type": "string",
            "description": "Custom Coverage Ownership. Valid values are Set By Customer or Set By EP"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/EmbargoPeriod"
          },
          "description": {
            "type": "string",
            "description": "Title Description",
            "example": "Some description of a title"
          },
          "edition": {
            "type": "string",
            "description": "Title Edition",
            "example": "1st"
          },
          "identifiersList": {
            "type": "array",
            "description": "A list of the identifiers associated with the title",
            "items": {
              "$ref": "#/components/schemas/LocalIdentifier"
            }
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Is the Package Custom?",
            "example": false
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Is this title peer reviewed",
            "example": false
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if selected in a customer's account",
            "example": true
          },
          "isTitleCustom": {
            "type": "boolean",
            "description": "Is this a custom title owned by the customer",
            "example": false
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": false
          },
          "kbid": {
            "type": "integer",
            "description": "EBSCO's unique identifier for the title",
            "format": "int64",
            "example": 1106847
          },
          "listId": {
            "type": "integer",
            "description": "EBSCO's unique identifier for the package",
            "format": "int64",
            "example": 1117849
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID",
            "format": "int64",
            "example": 123
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Managed Coverage List",
            "items": {
              "$ref": "#/components/schemas/CoverageList"
            }
          },
          "managedEmbargoPeriod": {
            "$ref": "#/components/schemas/EmbargoPeriod"
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom",
            "example": "Selected"
          },
          "proxy": {
            "$ref": "#/components/schemas/ProxyDto"
          },
          "pubType": {
            "type": "string",
            "description": "Publication Type",
            "example": "AudioBook"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name",
            "example": "EBSCO"
          },
          "subjectsList": {
            "type": "array",
            "description": "A list of relevant subjects",
            "items": {
              "$ref": "#/components/schemas/LocalSubject"
            }
          },
          "titleName": {
            "type": "string",
            "description": "Title Name",
            "example": "A Tale of Two Cities"
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "userDefinedField1": {
            "type": "string",
            "description": "User Defined Field 1",
            "example": "Sample Text 1"
          },
          "userDefinedField2": {
            "type": "string",
            "description": "User Defined Field 2",
            "example": "Sample Text 2"
          },
          "userDefinedField3": {
            "type": "string",
            "description": "User Defined Field 3",
            "example": "Sample Text 3"
          },
          "userDefinedField4": {
            "type": "string",
            "description": "User Defined Field 4",
            "example": "Sample Text 4"
          },
          "userDefinedField5": {
            "type": "string",
            "description": "User Defined Field 5",
            "example": "Sample Text 5"
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO's unique identifier for the provider",
            "format": "int64",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name",
            "example": "EBSCO"
          },
          "visibility": {
            "type": "array",
            "description": "Visibility details for pf,ftf and marc",
            "items": {
              "$ref": "#/components/schemas/VisibilityDataV1"
            }
          }
        }
      },
      "EmbargoPeriod": {
        "title": "EmbargoPeriod",
        "type": "object",
        "properties": {
          "embargoUnit": {
            "type": "object",
            "description": "Unit of measure: days, weeks, months, quarters, or years",
            "example": "days"
          },
          "embargoValue": {
            "type": "integer",
            "description": "A count of the specified time increment for which an embargo should apply",
            "format": "int32",
            "example": 1
          }
        },
        "x-examples": {
          "Example 1": {
            "embargoUnit": {},
            "embargoValue": 1
          }
        }
      },
      "LocalAlternateTitle": {
        "title": "LocalAlternateTitle",
        "type": "object",
        "properties": {
          "alternateTitle": {
            "type": "string",
            "description": "Alternate Title name",
            "example": "Sample Alternate Title"
          },
          "titleType": {
            "type": "string",
            "description": "Title Type",
            "example": "Book"
          }
        }
      },
      "LocalContributor": {
        "title": "LocalContributor",
        "type": "object",
        "properties": {
          "contributor": {
            "type": "string",
            "description": "Label assigned to the contributor",
            "example": "EBSCO"
          },
          "type": {
            "type": "string",
            "description": "Type of contributor (Author, Illustrator, Editor, etc.)",
            "example": "Author"
          }
        }
      },
      "CoverageList": {
        "title": "CoverageList",
        "type": "object",
        "properties": {
          "beginCoverage": {
            "type": "string",
            "description": "Start date",
            "example": "2003-01-01"
          },
          "endCoverage": {
            "type": "string",
            "description": "End date",
            "example": "2003-12-12"
          }
        }
      },
      "LocalIdentifier": {
        "title": "LocalIdentifier",
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique id for the identifier",
            "example": "1"
          },
          "source": {
            "type": "string",
            "description": "Identifier source",
            "example": "ResourceIdentifier"
          },
          "subtype": {
            "type": "integer",
            "description": "Specific type of identifier",
            "format": "int32",
            "example": 1
          },
          "type": {
            "type": "integer",
            "description": "Generic type of identifier",
            "format": "int32",
            "example": 0
          }
        }
      },
      "ProxyDto": {
        "title": "ProxyDto",
        "type": "object",
        "properties": {
          "id": {
            "type": "object",
            "description": "Proxy unique id",
            "example": "EZ_proxy"
          },
          "inherited": {
            "type": "object",
            "description": "Is the proxy inherited?"
          },
          "proxiedUrl": {
            "type": "string",
            "description": "URL with proxy applied",
            "example": "http://ezproxy.myinstitute.edu/login?url=http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          }
        }
      },
      "LocalSubject": {
        "title": "LocalSubject",
        "type": "object",
        "properties": {
          "subject": {
            "type": "string",
            "description": "Value of subject",
            "example": "Africa"
          },
          "type": {
            "type": "string",
            "description": "Type of subject",
            "example": "General"
          }
        }
      },
      "VisibilityDataV1": {
        "title": "VisibilityDataV1",
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Visibility category (PF, FTF, or Marc)",
            "example": "PF"
          },
          "hidden": {
            "type": "boolean",
            "description": "Hidden status",
            "example": false
          },
          "reason": {
            "type": "string",
            "description": "Reason the resource was hidden",
            "example": "Hidden by customer"
          }
        }
      },
      "PackageFacets": {
        "title": "PackageFacets",
        "type": "object",
        "properties": {
          "subjects": {
            "type": "array",
            "description": "List of subject facets",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FacetsModel"
              }
            }
          }
        }
      },
      "PackageSubjectResponse": {
        "title": "PackageSubjectResponse",
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of a subject",
            "example": 35408
          },
          "parentId": {
            "type": "integer",
            "description": "Id of Subject's Parent",
            "example": 35407
          },
          "schemaId": {
            "type": "integer",
            "description": "SchemaId of a Subject",
            "example": 3
          },
          "name": {
            "type": "string",
            "description": "Name of a Subject",
            "example": "Technology"
          },
          "isCustom": {
            "type": "boolean",
            "description": "Indicates if the subject has been custom selected by the customer",
            "example": false
          }
        }
      },
      "PackagesResultV2": {
        "required": [
          "packagesList",
          "totalResults",
          "facets"
        ],
        "type": "object",
        "properties": {
          "packagesList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PackageResponseV2"
            }
          },
          "totalResults": {
            "type": "integer",
            "description": "Total number of results found.",
            "example": 5
          },
          "facets": {
            "$ref": "#/components/schemas/PackageFacets"
          }
        },
        "description": "List of packages from EPKB - not limited to a single vendor id - and the total number of results found."
      },
      "PackageResponseV2": {
        "required": [
          "listId",
          "packageName"
        ],
        "type": "object",
        "properties": {
          "listId": {
            "type": "integer",
            "description": "EBSCO's unique identifier for the package.",
            "example": 1117849
          },
          "packageName": {
            "type": "string",
            "description": "Name of the Package.",
            "example": "Health & Wellness Resource Center (w/alt health module)"
          },
          "customDisplayName": {
            "type": "string",
            "description": "Custom name for the Package.",
            "example": "Health & Wellness"
          },
          "managedAltNames": {
            "type": "array",
            "description": "List of Alternative names of package",
            "items": {
              "type": "string",
              "example": "Health & Wellness Resource Center Alternative"
            }
          },
          "customAltNames": {
            "type": "array",
            "description": "List of Custom Alternative names of package",
            "items": {
              "type": "string",
              "example": "Health & Wellness Resource Center Alternative"
            }
          },
          "managedDescription": {
            "type": "string",
            "description": "Description of the package",
            "example": "Health & Wellness Resource Description example"
          },
          "customDescription": {
            "type": "string",
            "description": "Description of the package which is customized by a customer",
            "example": "Custom Health & Wellness Resource Description example that's modified by a customer"
          },
          "isCustom": {
            "type": "boolean",
            "description": "isCustom is true if a customer is the vendor.  The customer vendor is used for custom packages.",
            "example": true
          },
          "vendorId": {
            "type": "integer",
            "description": "EBSCO's unique identifier for the provider.",
            "example": 19
          },
          "vendorName": {
            "type": "string",
            "description": "Provider name.",
            "example": "EBSCO"
          },
          "titleCount": {
            "type": "integer",
            "description": "Numeric value indicating the title count of the package.",
            "example": 1
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the packages is selected in a customer's account.",
            "example": true
          },
          "isOrderedThroughEbsco": {
            "type": "boolean",
            "example": false,
            "description": "Limiter to include only records associated with an EBSCO order."
          },
          "packageFreeAccess": {
            "type": "boolean",
            "example": false,
            "description": "Indicates whether the package has free access designation or not."
          },
          "visibility": {
            "type": "array",
            "description": "Visibility details for pf,ftf and marc",
            "items": {
              "$ref": "#/components/schemas/VisibilityDataV1"
            }
          },
          "selectedCount": {
            "type": "integer",
            "description": "Numeric value indicating the selected count of the package.",
            "example": 1
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Field to indicate if a token is needed",
            "example": true
          },
          "customCoverage": {
            "$ref": "#/components/schemas/coverageDates"
          },
          "contentType": {
            "type": "string",
            "description": "Indicates the content type of the package.",
            "example": "aggregatedfulltext"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type.  Valid values are Selectable, Complete, Variable and Custom.",
            "example": "Complete"
          },
          "availableForSelection": {
            "type": "boolean",
            "description": "availableForSelection is true if the package is available for full selection.  Otherwise, it returns false.",
            "example": true
          },
          "url": {
            "type": "string",
            "description": "Package URL",
            "example": "http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "proxiedUrl": {
            "type": "string",
            "description": "URL with proxy applied",
            "example": "http://ezproxy.myinstitute.edu/login?url=http://search.ebscohost.com/login.aspx?authtype=ip,uid&profile=ehost&defaultdb=27h"
          },
          "subjectAssociations": {
            "type": "array",
            "description": "List of subject associations",
            "items": {
              "$ref": "#/components/schemas/PackageSubjectResponse"
            }
          }
        },
        "description": "This object represents data elements that describe a vendor package."
      },
      "TitlesV2": {
        "type": "object",
        "title": "TitlesV2",
        "description": "This object represents data that describes a title.",
        "properties": {
          "kbid": {
            "type": "integer",
            "description": "KBID"
          },
          "titleName": {
            "type": "string",
            "description": "Title Name"
          },
          "publisherName": {
            "type": "string",
            "description": "Publisher Name"
          },
          "identifiersList": {
            "type": "array",
            "description": "Identifiers",
            "items": {
              "$ref": "#/components/schemas/LocalIdentifier"
            }
          },
          "subjectsList": {
            "type": "array",
            "description": "Subjects",
            "items": {
              "$ref": "#/components/schemas/LocalSubject"
            }
          },
          "isTitleCustom": {
            "type": "boolean",
            "description": "Indicates if title is a custom title."
          },
          "pubType": {
            "type": "string",
            "description": "Publication Type"
          },
          "edition": {
            "type": "string",
            "description": "Edition"
          },
          "isPeerReviewed": {
            "type": "boolean",
            "description": "Indicates if the title is peer reviewed."
          },
          "contributorsList": {
            "type": "array",
            "description": "Contributors",
            "items": {
              "$ref": "#/components/schemas/LocalContributor"
            }
          },
          "alternateTitleList": {
            "type": "array",
            "description": "Alternate Titles",
            "items": {
              "$ref": "#/components/schemas/LocalAlternateTitle"
            }
          },
          "listId": {
            "type": "integer",
            "description": "List ID"
          },
          "packageName": {
            "type": "string",
            "description": "Package Name"
          },
          "packageType": {
            "type": "string",
            "description": "Package Type. Valid values are Selectable, Complete, Variable and Custom."
          },
          "proxy": {
            "$ref": "#/components/schemas/ProxyDto"
          },
          "isPackageCustom": {
            "type": "boolean",
            "description": "Indicates if the package is custom."
          },
          "vendorId": {
            "type": "integer",
            "description": "Vendor Id"
          },
          "vendorName": {
            "type": "string",
            "description": "Vendor Name"
          },
          "locationId": {
            "type": "integer",
            "description": "Location ID"
          },
          "isSelected": {
            "type": "boolean",
            "description": "Indicates if the title is selected."
          },
          "isOrderedThroughEbsco": {
            "type": "boolean",
            "description": "Indicates if the title is orered through Ebsco."
          },
          "isTokenNeeded": {
            "type": "boolean",
            "description": "Indicates if token is needed."
          },
          "visibility": {
            "type": "array",
            "description": "Visibility data for PF, FTF, and MARC.",
            "items": {
              "$ref": "#/components/schemas/VisibilityDataV1"
            }
          },
          "managedCoverageList": {
            "type": "array",
            "description": "Managed Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "customCoverageList": {
            "type": "array",
            "description": "Custom Coverage List",
            "items": {
              "$ref": "#/components/schemas/coverageDates"
            }
          },
          "managedEmbargoPeriod": {
            "$ref": "#/components/schemas/EmbargoPeriod"
          },
          "customEmbargoPeriod": {
            "$ref": "#/components/schemas/EmbargoPeriod"
          },
          "url": {
            "type": "string",
            "description": "URL"
          }
        }
      },
      "PackageSubjectAssociation": {
        "title": "PackageSubjectAssociation",
        "type": "object",
        "description": "A Subject associated to a Package",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the subject.",
            "example": "General Works"
          },
          "parentId": {
            "type": "string",
            "description": "The parent id of the subject (will not be displayed if the associated subject is a root subject)."
          },
          "id": {
            "type": "integer",
            "description": "Subject ID",
            "example": 26211
          },
          "schemaId": {
            "type": "integer",
            "description": "Schema ID",
            "example": 3
          },
          "isCustom": {
            "type": "boolean",
            "description": "Indicates if the package subject association is custom.",
            "example": false
          },
          "explicitAssignment": {
            "type": "boolean",
            "description": "Indicates if the package subject association is explicit (true) or implicit (false).",
            "example": true
          },
          "subjectHierarchy": {
            "type": "string",
            "description": "The subject hierarchy in string format.",
            "example": "General Works"
          }
        }
      },
      "AvailableSubjectResponse": {
        "title": "AvailableSubjectResponse",
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "integer",
            "description": "The id of the subject",
            "example": 35408
          },
          "parentId": {
            "type": "integer",
            "description": "The id of the parent subject. If this is a root level package subject association this property will not be in the response.",
            "example": 35407
          },
          "schemaId": {
            "type": "integer",
            "description": "The id of the subject schema",
            "example": 3
          },
          "schemaName": {
            "type": "string",
            "description": "The name of the subject schema",
            "example": "Library of Congress"
          },
          "subjectName": {
            "type": "string",
            "description": "The name of the subject",
            "example": "Agricultural chemistry.  Agricultural chemicals"
          },
          "subjectHierarchy": {
            "type": "string",
            "description": "Agriculture (General) -- Agricultural chemistry.  Agricultural chemicals",
            "example": false
          }
        }
      },
      "UpdateSubjectAssociation": {
        "type": "object",
        "properties": {
          "subjectId": {
            "type": "integer",
            "description": "The ID of the subject being associated.",
            "example": 35408
          }
        },
        "description": "A Subject to be associated with a Package"
      },
      "category": {
        "title": "category",
        "x-stoplight": {
          "id": "fuhbv3lk9koam"
        },
        "type": "object",
        "description": "Details for a customer's package category",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "Identifier of the category"
          },
          "categoryName": {
            "type": "string",
            "description": "Name of the category"
          },
          "parentId": {
            "$ref": "#/components/schemas/categoryWithoutHierarchy"
          },
          "childIds": {
            "type": "array",
            "description": "List of categoryIds that are assigned as the children of the category",
            "items": {
              "$ref": "#/components/schemas/categoryWithoutHierarchy"
            }
          },
          "listIds": {
            "type": "array",
            "description": "Array of listIds that have the category assigned to it",
            "items": {
              "type": "integer"
            }
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the category"
          }
        }
      },
      "categoryWithoutHierarchy": {
        "title": "categoryWithoutHierarchy",
        "x-stoplight": {
          "id": "8d5j7mbe9m7jm"
        },
        "type": "object",
        "description": "This model is used to give the details of inner Parent/Child category fields of a given category. It excludes the parentId and childIds fields.",
        "properties": {
          "categoryId": {
            "type": "integer",
            "description": "Identifier of the category"
          },
          "categoryName": {
            "type": "string",
            "description": "Name of the category"
          },
          "listIds": {
            "type": "array",
            "description": "Array of listIds that have the category assigned to it",
            "items": {
              "type": "integer"
            }
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the category"
          }
        }
      },
      "categoryRequest": {
        "title": "categoryRequest",
        "x-stoplight": {
          "id": "wk5aern5yltkr"
        },
        "type": "object",
        "description": "Model used when creating or updating a category",
        "properties": {
          "categoryName": {
            "type": "string",
            "description": "Name of the category",
            "maxLength": 300,
            "minLength": 1
          },
          "parentId": {
            "type": "integer",
            "description": "Id of the category to assign as parent of given category"
          },
          "childIds": {
            "type": "array",
            "description": "List of categoryIds that are to be assigned as the children of the category",
            "items": {
              "type": "integer"
            }
          },
          "listIds": {
            "type": "array",
            "description": "Array of listIds that are to be assigned to the category",
            "items": {
              "type": "integer"
            }
          },
          "rank": {
            "type": "integer",
            "description": "Rank of the category",
            "maximum": 500,
            "minimum": 1
          }
        },
        "required": [
          "categoryName"
        ]
      }
    }
  }
}